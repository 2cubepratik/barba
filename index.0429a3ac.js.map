{"mappings":"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","sources":["node_modules/node_modules/babel-plugin-transform-async-to-promises/helpers.js","node_modules/@barba/core/src/modules/Logger.ts","node_modules/@barba/core/src/defs/hooks.ts","node_modules/node_modules/path-to-regexp/index.js","node_modules/@barba/core/src/schemas/attribute.ts","node_modules/@barba/core/src/utils/dom.ts","node_modules/@barba/core/src/utils/history.ts","node_modules/@barba/core/src/utils/helpers.ts","node_modules/@barba/core/src/utils/url.ts","node_modules/@barba/core/src/utils/request.ts","node_modules/node_modules/is-promise/index.js","node_modules/@barba/core/src/utils/run-async.ts","node_modules/@barba/core/src/hooks.ts","node_modules/@barba/core/src/modules/Ignore.ts","node_modules/@barba/core/src/modules/Cache.ts","node_modules/@barba/core/src/modules/Prevent.ts","node_modules/@barba/core/src/modules/Error.ts","node_modules/@barba/core/src/modules/Store.ts","node_modules/@barba/core/src/modules/Transitions.ts","node_modules/@barba/core/src/modules/Views.ts","node_modules/@barba/core/src/polyfills/index.ts","node_modules/@barba/core/src/schemas/page.ts","node_modules/@barba/core/src/core.ts","node_modules/@barba/css/src/css.ts","src/js/app.js"],"sourcesContent":["// A type of promise-like that resolves synchronously and supports only one observer\nexport const _Pact = /*#__PURE__*/(function() {\n\tfunction _Pact() {}\n\t_Pact.prototype.then = function(onFulfilled, onRejected) {\n\t\tconst result = new _Pact();\n\t\tconst state = this.s;\n\t\tif (state) {\n\t\t\tconst callback = state & 1 ? onFulfilled : onRejected;\n\t\t\tif (callback) {\n\t\t\t\ttry {\n\t\t\t\t\t_settle(result, 1, callback(this.v));\n\t\t\t\t} catch (e) {\n\t\t\t\t\t_settle(result, 2, e);\n\t\t\t\t}\n\t\t\t\treturn result;\n\t\t\t} else {\n\t\t\t\treturn this;\n\t\t\t}\n\t\t}\n\t\tthis.o = function(_this) {\n\t\t\ttry {\n\t\t\t\tconst value = _this.v;\n\t\t\t\tif (_this.s & 1) {\n\t\t\t\t\t_settle(result, 1, onFulfilled ? onFulfilled(value) : value);\n\t\t\t\t} else if (onRejected) {\n\t\t\t\t\t_settle(result, 1, onRejected(value));\n\t\t\t\t} else {\n\t\t\t\t\t_settle(result, 2, value);\n\t\t\t\t}\n\t\t\t} catch (e) {\n\t\t\t\t_settle(result, 2, e);\n\t\t\t}\n\t\t};\n\t\treturn result;\n\t}\n\treturn _Pact;\n})();\n\n// Settles a pact synchronously\nexport function _settle(pact, state, value) {\n\tif (!pact.s) {\n\t\tif (value instanceof _Pact) {\n\t\t\tif (value.s) {\n\t\t\t\tif (state & 1) {\n\t\t\t\t\tstate = value.s;\n\t\t\t\t}\n\t\t\t\tvalue = value.v;\n\t\t\t} else {\n\t\t\t\tvalue.o = _settle.bind(null, pact, state);\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t\tif (value && value.then) {\n\t\t\tvalue.then(_settle.bind(null, pact, state), _settle.bind(null, pact, 2));\n\t\t\treturn;\n\t\t}\n\t\tpact.s = state;\n\t\tpact.v = value;\n\t\tconst observer = pact.o;\n\t\tif (observer) {\n\t\t\tobserver(pact);\n\t\t}\n\t}\n}\n\nexport function _isSettledPact(thenable) {\n\treturn thenable instanceof _Pact && thenable.s & 1;\n}\n\n// Converts argument to a function that always returns a Promise\nexport function _async(f) {\n\treturn function() {\n\t\tfor (var args = [], i = 0; i < arguments.length; i++) {\n\t\t\targs[i] = arguments[i];\n\t\t}\n\t\ttry {\n\t\t\treturn Promise.resolve(f.apply(this, args));\n\t\t} catch(e) {\n\t\t\treturn Promise.reject(e);\n\t\t}\n\t}\n}\n\n// Awaits on a value that may or may not be a Promise (equivalent to the await keyword in ES2015, with continuations passed explicitly)\nexport function _await(value, then, direct) {\n\tif (direct) {\n\t\treturn then ? then(value) : value;\n\t}\n\tif (!value || !value.then) {\n\t\tvalue = Promise.resolve(value);\n\t}\n\treturn then ? value.then(then) : value;\n}\n\n// Awaits on a value that may or may not be a Promise, then ignores it\nexport function _awaitIgnored(value, direct) {\n\tif (!direct) {\n\t\treturn value && value.then ? value.then(_empty) : Promise.resolve();\n\t}\n}\n\n// Proceeds after a value has resolved, or proceeds immediately if the value is not thenable\nexport function _continue(value, then) {\n\treturn value && value.then ? value.then(then) : then(value);\n}\n\n// Proceeds after a value has resolved, or proceeds immediately if the value is not thenable\nexport function _continueIgnored(value) {\n\tif (value && value.then) {\n\t\treturn value.then(_empty);\n\t}\n}\n\n// Asynchronously iterate through an object that has a length property, passing the index as the first argument to the callback (even as the length property changes)\nexport function _forTo(array, body, check) {\n\tvar i = -1, pact, reject;\n\tfunction _cycle(result) {\n\t\ttry {\n\t\t\twhile (++i < array.length && (!check || !check())) {\n\t\t\t\tresult = body(i);\n\t\t\t\tif (result && result.then) {\n\t\t\t\t\tif (_isSettledPact(result)) {\n\t\t\t\t\t\tresult = result.v;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tresult.then(_cycle, reject || (reject = _settle.bind(null, pact = new _Pact(), 2)));\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (pact) {\n\t\t\t\t_settle(pact, 1, result);\n\t\t\t} else {\n\t\t\t\tpact = result;\n\t\t\t}\n\t\t} catch (e) {\n\t\t\t_settle(pact || (pact = new _Pact()), 2, e);\n\t\t}\n\t}\n\t_cycle();\n\treturn pact;\n}\n\n// Asynchronously iterate through an object's properties (including properties inherited from the prototype)\n// Uses a snapshot of the object's properties\nexport function _forIn(target, body, check) {\n\tvar keys = [];\n\tfor (var key in target) {\n\t\tkeys.push(key);\n\t}\n\treturn _forTo(keys, function(i) { return body(keys[i]); }, check);\n}\n\n// Asynchronously iterate through an object's own properties (excluding properties inherited from the prototype)\n// Uses a snapshot of the object's properties\nexport function _forOwn(target, body, check) {\n\tvar keys = [];\n\tfor (var key in target) {\n\t\tif (Object.prototype.hasOwnProperty.call(target, key)) {\n\t\t\tkeys.push(key);\n\t\t}\n\t}\n\treturn _forTo(keys, function(i) { return body(keys[i]); }, check);\n}\n\nexport const _iteratorSymbol = /*#__PURE__*/ typeof Symbol !== \"undefined\" ? (Symbol.iterator || (Symbol.iterator = Symbol(\"Symbol.iterator\"))) : \"@@iterator\";\n\n// Asynchronously iterate through an object's values\n// Uses for...of if the runtime supports it, otherwise iterates until length on a copy\nexport function _forOf(target, body, check) {\n\tif (typeof target[_iteratorSymbol] === \"function\") {\n\t\tvar iterator = target[_iteratorSymbol](), step, pact, reject;\n\t\tfunction _cycle(result) {\n\t\t\ttry {\n\t\t\t\twhile (!(step = iterator.next()).done && (!check || !check())) {\n\t\t\t\t\tresult = body(step.value);\n\t\t\t\t\tif (result && result.then) {\n\t\t\t\t\t\tif (_isSettledPact(result)) {\n\t\t\t\t\t\t\tresult = result.v;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tresult.then(_cycle, reject || (reject = _settle.bind(null, pact = new _Pact(), 2)));\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (pact) {\n\t\t\t\t\t_settle(pact, 1, result);\n\t\t\t\t} else {\n\t\t\t\t\tpact = result;\n\t\t\t\t}\n\t\t\t} catch (e) {\n\t\t\t\t_settle(pact || (pact = new _Pact()), 2, e);\n\t\t\t}\n\t\t}\n\t\t_cycle();\n\t\tif (iterator.return) {\n\t\t\tvar _fixup = function(value) {\n\t\t\t\ttry {\n\t\t\t\t\tif (!step.done) {\n\t\t\t\t\t\titerator.return();\n\t\t\t\t\t}\n\t\t\t\t} catch(e) {\n\t\t\t\t}\n\t\t\t\treturn value;\n\t\t\t}\n\t\t\tif (pact && pact.then) {\n\t\t\t\treturn pact.then(_fixup, function(e) {\n\t\t\t\t\tthrow _fixup(e);\n\t\t\t\t});\n\t\t\t}\n\t\t\t_fixup();\n\t\t}\n\t\treturn pact;\n\t}\n\t// No support for Symbol.iterator\n\tif (!(\"length\" in target)) {\n\t\tthrow new TypeError(\"Object is not iterable\");\n\t}\n\t// Handle live collections properly\n\tvar values = [];\n\tfor (var i = 0; i < target.length; i++) {\n\t\tvalues.push(target[i]);\n\t}\n\treturn _forTo(values, function(i) { return body(values[i]); }, check);\n}\n\nexport const _asyncIteratorSymbol = /*#__PURE__*/ typeof Symbol !== \"undefined\" ? (Symbol.asyncIterator || (Symbol.asyncIterator = Symbol(\"Symbol.asyncIterator\"))) : \"@@asyncIterator\";\n\n// Asynchronously iterate on a value using it's async iterator if present, or its synchronous iterator if missing\nexport function _forAwaitOf(target, body, check) {\n\tif (typeof target[_asyncIteratorSymbol] === \"function\") {\n\t\tvar pact = new _Pact();\n\t\tvar iterator = target[_asyncIteratorSymbol]();\n\t\titerator.next().then(_resumeAfterNext).then(void 0, _reject);\n\t\treturn pact;\n\t\tfunction _resumeAfterBody(result) {\n\t\t\tif (check && check()) {\n\t\t\t\treturn _settle(pact, 1, iterator.return ? iterator.return().then(function() { return result; }) : result);\n\t\t\t}\n\t\t\titerator.next().then(_resumeAfterNext).then(void 0, _reject);\n\t\t}\n\t\tfunction _resumeAfterNext(step) {\n\t\t\tif (step.done) {\n\t\t\t\t_settle(pact, 1);\n\t\t\t} else {\n\t\t\t\tPromise.resolve(body(step.value)).then(_resumeAfterBody).then(void 0, _reject);\n\t\t\t}\n\t\t}\n\t\tfunction _reject(error) {\n\t\t\t_settle(pact, 2, iterator.return ? iterator.return().then(function() { return error; }) : error);\n\t\t}\n\t}\n\treturn Promise.resolve(_forOf(target, function(value) { return Promise.resolve(value).then(body); }, check));\n}\n\n// Asynchronously implement a generic for loop\nexport function _for(test, update, body) {\n\tvar stage;\n\tfor (;;) {\n\t\tvar shouldContinue = test();\n\t\tif (_isSettledPact(shouldContinue)) {\n\t\t\tshouldContinue = shouldContinue.v;\n\t\t}\n\t\tif (!shouldContinue) {\n\t\t\treturn result;\n\t\t}\n\t\tif (shouldContinue.then) {\n\t\t\tstage = 0;\n\t\t\tbreak;\n\t\t}\n\t\tvar result = body();\n\t\tif (result && result.then) {\n\t\t\tif (_isSettledPact(result)) {\n\t\t\t\tresult = result.s;\n\t\t\t} else {\n\t\t\t\tstage = 1;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif (update) {\n\t\t\tvar updateValue = update();\n\t\t\tif (updateValue && updateValue.then && !_isSettledPact(updateValue)) {\n\t\t\t\tstage = 2;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\tvar pact = new _Pact();\n\tvar reject = _settle.bind(null, pact, 2);\n\t(stage === 0 ? shouldContinue.then(_resumeAfterTest) : stage === 1 ? result.then(_resumeAfterBody) : updateValue.then(_resumeAfterUpdate)).then(void 0, reject);\n\treturn pact;\n\tfunction _resumeAfterBody(value) {\n\t\tresult = value;\n\t\tdo {\n\t\t\tif (update) {\n\t\t\t\tupdateValue = update();\n\t\t\t\tif (updateValue && updateValue.then && !_isSettledPact(updateValue)) {\n\t\t\t\t\tupdateValue.then(_resumeAfterUpdate).then(void 0, reject);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t\tshouldContinue = test();\n\t\t\tif (!shouldContinue || (_isSettledPact(shouldContinue) && !shouldContinue.v)) {\n\t\t\t\t_settle(pact, 1, result);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif (shouldContinue.then) {\n\t\t\t\tshouldContinue.then(_resumeAfterTest).then(void 0, reject);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tresult = body();\n\t\t\tif (_isSettledPact(result)) {\n\t\t\t\tresult = result.v;\n\t\t\t}\n\t\t} while (!result || !result.then);\n\t\tresult.then(_resumeAfterBody).then(void 0, reject);\n\t}\n\tfunction _resumeAfterTest(shouldContinue) {\n\t\tif (shouldContinue) {\n\t\t\tresult = body();\n\t\t\tif (result && result.then) {\n\t\t\t\tresult.then(_resumeAfterBody).then(void 0, reject);\n\t\t\t} else {\n\t\t\t\t_resumeAfterBody(result);\n\t\t\t}\n\t\t} else {\n\t\t\t_settle(pact, 1, result);\n\t\t}\n\t}\n\tfunction _resumeAfterUpdate() {\n\t\tif (shouldContinue = test()) {\n\t\t\tif (shouldContinue.then) {\n\t\t\t\tshouldContinue.then(_resumeAfterTest).then(void 0, reject);\n\t\t\t} else {\n\t\t\t\t_resumeAfterTest(shouldContinue);\n\t\t\t}\n\t\t} else {\n\t\t\t_settle(pact, 1, result);\n\t\t}\n\t}\n}\n\n// Asynchronously implement a do ... while loop\nexport function _do(body, test) {\n\tvar awaitBody;\n\tdo {\n\t\tvar result = body();\n\t\tif (result && result.then) {\n\t\t\tif (_isSettledPact(result)) {\n\t\t\t\tresult = result.v;\n\t\t\t} else {\n\t\t\t\tawaitBody = true;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tvar shouldContinue = test();\n\t\tif (_isSettledPact(shouldContinue)) {\n\t\t\tshouldContinue = shouldContinue.v;\n\t\t}\n\t\tif (!shouldContinue) {\n\t\t\treturn result;\n\t\t}\n\t} while (!shouldContinue.then);\n\tconst pact = new _Pact();\n\tconst reject = _settle.bind(null, pact, 2);\n\t(awaitBody ? result.then(_resumeAfterBody) : shouldContinue.then(_resumeAfterTest)).then(void 0, reject);\n\treturn pact;\n\tfunction _resumeAfterBody(value) {\n\t\tresult = value;\n\t\tfor (;;) {\n\t\t\tshouldContinue = test();\n\t\t\tif (_isSettledPact(shouldContinue)) {\n\t\t\t\tshouldContinue = shouldContinue.v;\n\t\t\t}\n\t\t\tif (!shouldContinue) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif (shouldContinue.then) {\n\t\t\t\tshouldContinue.then(_resumeAfterTest).then(void 0, reject);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tresult = body();\n\t\t\tif (result && result.then) {\n\t\t\t\tif (_isSettledPact(result)) {\n\t\t\t\t\tresult = result.v;\n\t\t\t\t} else {\n\t\t\t\t\tresult.then(_resumeAfterBody).then(void 0, reject);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t_settle(pact, 1, result);\n\t}\n\tfunction _resumeAfterTest(shouldContinue) {\n\t\tif (shouldContinue) {\n\t\t\tdo {\n\t\t\t\tresult = body();\n\t\t\t\tif (result && result.then) {\n\t\t\t\t\tif (_isSettledPact(result)) {\n\t\t\t\t\t\tresult = result.v;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tresult.then(_resumeAfterBody).then(void 0, reject);\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tshouldContinue = test();\n\t\t\t\tif (_isSettledPact(shouldContinue)) {\n\t\t\t\t\tshouldContinue = shouldContinue.v;\n\t\t\t\t}\n\t\t\t\tif (!shouldContinue) {\n\t\t\t\t\t_settle(pact, 1, result);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t} while (!shouldContinue.then);\n\t\t\tshouldContinue.then(_resumeAfterTest).then(void 0, reject);\n\t\t} else {\n\t\t\t_settle(pact, 1, result);\n\t\t}\n\t}\n}\n\n// Asynchronously implement a switch statement\nexport function _switch(discriminant, cases) {\n\tvar dispatchIndex = -1;\n\tvar awaitBody;\n\touter: {\n\t\tfor (var i = 0; i < cases.length; i++) {\n\t\t\tvar test = cases[i][0];\n\t\t\tif (test) {\n\t\t\t\tvar testValue = test();\n\t\t\t\tif (testValue && testValue.then) {\n\t\t\t\t\tbreak outer;\n\t\t\t\t}\n\t\t\t\tif (testValue === discriminant) {\n\t\t\t\t\tdispatchIndex = i;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// Found the default case, set it as the pending dispatch case\n\t\t\t\tdispatchIndex = i;\n\t\t\t}\n\t\t}\n\t\tif (dispatchIndex !== -1) {\n\t\t\tdo {\n\t\t\t\tvar body = cases[dispatchIndex][1];\n\t\t\t\twhile (!body) {\n\t\t\t\t\tdispatchIndex++;\n\t\t\t\t\tbody = cases[dispatchIndex][1];\n\t\t\t\t}\n\t\t\t\tvar result = body();\n\t\t\t\tif (result && result.then) {\n\t\t\t\t\tawaitBody = true;\n\t\t\t\t\tbreak outer;\n\t\t\t\t}\n\t\t\t\tvar fallthroughCheck = cases[dispatchIndex][2];\n\t\t\t\tdispatchIndex++;\n\t\t\t} while (fallthroughCheck && !fallthroughCheck());\n\t\t\treturn result;\n\t\t}\n\t}\n\tconst pact = new _Pact();\n\tconst reject = _settle.bind(null, pact, 2);\n\t(awaitBody ? result.then(_resumeAfterBody) : testValue.then(_resumeAfterTest)).then(void 0, reject);\n\treturn pact;\n\tfunction _resumeAfterTest(value) {\n\t\tfor (;;) {\n\t\t\tif (value === discriminant) {\n\t\t\t\tdispatchIndex = i;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif (++i === cases.length) {\n\t\t\t\tif (dispatchIndex !== -1) {\n\t\t\t\t\tbreak;\n\t\t\t\t} else {\n\t\t\t\t\t_settle(pact, 1, result);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t\ttest = cases[i][0];\n\t\t\tif (test) {\n\t\t\t\tvalue = test();\n\t\t\t\tif (value && value.then) {\n\t\t\t\t\tvalue.then(_resumeAfterTest).then(void 0, reject);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tdispatchIndex = i;\n\t\t\t}\n\t\t}\n\t\tdo {\n\t\t\tvar body = cases[dispatchIndex][1];\n\t\t\twhile (!body) {\n\t\t\t\tdispatchIndex++;\n\t\t\t\tbody = cases[dispatchIndex][1];\n\t\t\t}\n\t\t\tvar result = body();\n\t\t\tif (result && result.then) {\n\t\t\t\tresult.then(_resumeAfterBody).then(void 0, reject);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tvar fallthroughCheck = cases[dispatchIndex][2];\n\t\t\tdispatchIndex++;\n\t\t} while (fallthroughCheck && !fallthroughCheck());\n\t\t_settle(pact, 1, result);\n\t}\n\tfunction _resumeAfterBody(result) {\n\t\tfor (;;) {\n\t\t\tvar fallthroughCheck = cases[dispatchIndex][2];\n\t\t\tif (!fallthroughCheck || fallthroughCheck()) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tdispatchIndex++;\n\t\t\tvar body = cases[dispatchIndex][1];\n\t\t\twhile (!body) {\n\t\t\t\tdispatchIndex++;\n\t\t\t\tbody = cases[dispatchIndex][1];\n\t\t\t}\n\t\t\tresult = body();\n\t\t\tif (result && result.then) {\n\t\t\t\tresult.then(_resumeAfterBody).then(void 0, reject);\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t\t_settle(pact, 1, result);\n\t}\n}\n\n// Asynchronously call a function and pass the result to explicitly passed continuations\nexport function _call(body, then, direct) {\n\tif (direct) {\n\t\treturn then ? then(body()) : body();\n\t}\n\ttry {\n\t\tvar result = Promise.resolve(body());\n\t\treturn then ? result.then(then) : result;\n\t} catch (e) {\n\t\treturn Promise.reject(e);\n\t}\n}\n\n// Asynchronously call a function and swallow the result\nexport function _callIgnored(body, direct) {\n\treturn _call(body, _empty, direct);\n}\n\n// Asynchronously call a function and pass the result to explicitly passed continuations\nexport function _invoke(body, then) {\n\tvar result = body();\n\tif (result && result.then) {\n\t\treturn result.then(then);\n\t}\n\treturn then(result);\n}\n\n// Asynchronously call a function and swallow the result\nexport function _invokeIgnored(body) {\n\tvar result = body();\n\tif (result && result.then) {\n\t\treturn result.then(_empty);\n\t}\n}\n\n// Asynchronously call a function and send errors to recovery continuation\nexport function _catch(body, recover) {\n\ttry {\n\t\tvar result = body();\n\t} catch(e) {\n\t\treturn recover(e);\n\t}\n\tif (result && result.then) {\n\t\treturn result.then(void 0, recover);\n\t}\n\treturn result;\n}\n\n// Asynchronously await a promise and pass the result to a finally continuation\nexport function _finallyRethrows(body, finalizer) {\n\ttry {\n\t\tvar result = body();\n\t} catch (e) {\n\t\treturn finalizer(true, e);\n\t}\n\tif (result && result.then) {\n\t\treturn result.then(finalizer.bind(null, false), finalizer.bind(null, true));\n\t}\n\treturn finalizer(false, result);\n}\n\n// Asynchronously await a promise and invoke a finally continuation that always overrides the result\nexport function _finally(body, finalizer) {\n\ttry {\n\t\tvar result = body();\n\t} catch (e) {\n\t\treturn finalizer();\n\t}\n\tif (result && result.then) {\n\t\treturn result.then(finalizer, finalizer);\n\t}\n\treturn finalizer();\n}\n\n// Rethrow or return a value from a finally continuation\nexport function _rethrow(thrown, value) {\n\tif (thrown)\n\t\tthrow value;\n\treturn value;\n}\n\n// Empty function to implement break and other control flow that ignores asynchronous results\nexport function _empty() {\n}\n\n// Sentinel value for early returns in generators \nexport const _earlyReturn = /*#__PURE__*/ {};\n\n// Asynchronously call a function and send errors to recovery continuation, skipping early returns\nexport function _catchInGenerator(body, recover) {\n\treturn _catch(body, function(e) {\n\t\tif (e === _earlyReturn) {\n\t\t\tthrow e;\n\t\t}\n\t\treturn recover(e);\n\t});\n}\n\n// Asynchronous generator class; accepts the entrypoint of the generator, to which it passes itself when the generator should start\nexport const _AsyncGenerator = /*#__PURE__*/(function() {\n\tfunction _AsyncGenerator(entry) {\n\t\tthis._entry = entry;\n\t\tthis._pact = null;\n\t\tthis._resolve = null;\n\t\tthis._return = null;\n\t\tthis._promise = null;\n\t}\n\n\tfunction _wrapReturnedValue(value) {\n\t\treturn { value: value, done: true };\n\t}\n\tfunction _wrapYieldedValue(value) {\n\t\treturn { value: value, done: false };\n\t}\n\n\t_AsyncGenerator.prototype._yield = function(value) {\n\t\t// Yield the value to the pending next call\n\t\tthis._resolve(value && value.then ? value.then(_wrapYieldedValue) : _wrapYieldedValue(value));\n\t\t// Return a pact for an upcoming next/return/throw call\n\t\treturn this._pact = new _Pact();\n\t};\n\t_AsyncGenerator.prototype.next = function(value) {\n\t\t// Advance the generator, starting it if it has yet to be started\n\t\tconst _this = this;\n\t\treturn _this._promise = new Promise(function (resolve) {\n\t\t\tconst _pact = _this._pact;\n\t\t\tif (_pact === null) {\n\t\t\t\tconst _entry = _this._entry;\n\t\t\t\tif (_entry === null) {\n\t\t\t\t\t// Generator is started, but not awaiting a yield expression\n\t\t\t\t\t// Abandon the next call!\n\t\t\t\t\treturn resolve(_this._promise);\n\t\t\t\t}\n\t\t\t\t// Start the generator\n\t\t\t\t_this._entry = null;\n\t\t\t\t_this._resolve = resolve;\n\t\t\t\tfunction returnValue(value) {\n\t\t\t\t\t_this._resolve(value && value.then ? value.then(_wrapReturnedValue) : _wrapReturnedValue(value));\n\t\t\t\t\t_this._pact = null;\n\t\t\t\t\t_this._resolve = null;\n\t\t\t\t}\n\t\t\t\tvar result = _entry(_this);\n\t\t\t\tif (result && result.then) {\n\t\t\t\t\tresult.then(returnValue, function(error) {\n\t\t\t\t\t\tif (error === _earlyReturn) {\n\t\t\t\t\t\t\treturnValue(_this._return);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tconst pact = new _Pact();\n\t\t\t\t\t\t\t_this._resolve(pact);\n\t\t\t\t\t\t\t_this._pact = null;\n\t\t\t\t\t\t\t_this._resolve = null;\n\t\t\t\t\t\t\t_resolve(pact, 2, error);\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t} else {\n\t\t\t\t\treturnValue(result);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// Generator is started and a yield expression is pending, settle it\n\t\t\t\t_this._pact = null;\n\t\t\t\t_this._resolve = resolve;\n\t\t\t\t_settle(_pact, 1, value);\n\t\t\t}\n\t\t});\n\t};\n\t_AsyncGenerator.prototype.return = function(value) {\n\t\t// Early return from the generator if started, otherwise abandons the generator\n\t\tconst _this = this;\n\t\treturn _this._promise = new Promise(function (resolve) {\n\t\t\tconst _pact = _this._pact;\n\t\t\tif (_pact === null) {\n\t\t\t\tif (_this._entry === null) {\n\t\t\t\t\t// Generator is started, but not awaiting a yield expression\n\t\t\t\t\t// Abandon the return call!\n\t\t\t\t\treturn resolve(_this._promise);\n\t\t\t\t}\n\t\t\t\t// Generator is not started, abandon it and return the specified value\n\t\t\t\t_this._entry = null;\n\t\t\t\treturn resolve(value && value.then ? value.then(_wrapReturnedValue) : _wrapReturnedValue(value));\n\t\t\t}\n\t\t\t// Settle the yield expression with a rejected \"early return\" value\n\t\t\t_this._return = value;\n\t\t\t_this._resolve = resolve;\n\t\t\t_this._pact = null;\n\t\t\t_settle(_pact, 2, _earlyReturn);\n\t\t});\n\t};\n\t_AsyncGenerator.prototype.throw = function(error) {\n\t\t// Inject an exception into the pending yield expression\n\t\tconst _this = this;\n\t\treturn _this._promise = new Promise(function (resolve, reject) {\n\t\t\tconst _pact = _this._pact;\n\t\t\tif (_pact === null) {\n\t\t\t\tif (_this._entry === null) {\n\t\t\t\t\t// Generator is started, but not awaiting a yield expression\n\t\t\t\t\t// Abandon the throw call!\n\t\t\t\t\treturn resolve(_this._promise);\n\t\t\t\t}\n\t\t\t\t// Generator is not started, abandon it and return a rejected Promise containing the error\n\t\t\t\t_this._entry = null;\n\t\t\t\treturn reject(error);\n\t\t\t}\n\t\t\t// Settle the yield expression with the value as a rejection\n\t\t\t_this._resolve = resolve;\n\t\t\t_this._pact = null;\n\t\t\t_settle(_pact, 2, error);\n\t\t});\n\t};\n\n\t_AsyncGenerator.prototype[_asyncIteratorSymbol] = function() {\n\t\treturn this;\n\t};\n\t\n\treturn _AsyncGenerator;\n})();\n","/**\n * @barba/core/modules/Logger\n * <br><br>\n * ## Logger.\n *\n * - Display informations via the console\n *\n * @module core/modules/Logger\n * @preferred\n */\n\n/***/\n\n/**\n * Log levels, all lower level messages are printed\n *\n * 0. mute\n * 1. error = `console.error()`\n * 2. warning= `console.warn()`\n * 3. info = `console.info()`\n * 4. debug = `console.log()`\n */\nexport enum LogLevels {\n  off = 0,\n  error = 1,\n  warning = 2,\n  info = 3,\n  debug = 4,\n}\n\n/**\n * Global log level\n */\nlet _level: number = LogLevels.off;\n\nexport class Logger {\n  /**\n   * Get global log level.\n   */\n  public static getLevel(): number {\n    return _level;\n  }\n\n  /**\n   * Set global log level.\n   */\n  public static setLevel(name: keyof typeof LogLevels): number {\n    _level = LogLevels[name];\n\n    return _level;\n  }\n\n  /**\n   * Log \"prefix\".\n   */\n  private _source: string;\n\n  /**\n   * Creates an instance of Logger.\n   */\n  constructor(source: string) {\n    this._source = source;\n  }\n\n  /**\n   * Permanent, unremovable log.\n   */\n  // public print(...objects: any[]): void {\n  //   this._log(console.info, LogLevels.off, objects);\n  // }\n\n  /**\n   * Error log.\n   */\n  public error(...objects: any[]): void {\n    this._log(console.error, LogLevels.error, objects);\n  }\n\n  /**\n   * Warn log.\n   */\n  public warn(...objects: any[]): void {\n    this._log(console.warn, LogLevels.warning, objects);\n  }\n\n  /**\n   * Info log.\n   */\n  public info(...objects: any[]): void {\n    this._log(console.info, LogLevels.info, objects);\n  }\n\n  /**\n   * Debug log.\n   */\n  public debug(...objects: any[]): void {\n    this._log(console.log, LogLevels.debug, objects);\n  }\n\n  /**\n   * Internal logger.\n   */\n  private _log(fn: () => void, level: number, objects: any[]): void {\n    if (level <= Logger.getLevel()) {\n      fn.apply(console, ([`[${this._source}] `].concat(objects) as unknown) as [\n\n      ]);\n    }\n  }\n}\n","/**\n * @module typings/core\n */\nimport { ITransitionData, ITransitionPage, IViewData } from './index';\n\nexport type HooksBarba =\n  | 'ready'\n  | 'page'\n  | 'reset'\n  | 'currentAdded'\n  | 'currentRemoved'\n  | 'nextAdded'\n  | 'nextRemoved';\n\nexport type HooksOnce = 'beforeOnce' | 'once' | 'afterOnce';\n\nexport type HooksPage =\n  | 'before'\n  | 'beforeLeave'\n  | 'leave'\n  | 'afterLeave'\n  | 'beforeEnter'\n  | 'enter'\n  | 'afterEnter'\n  | 'after';\n\nexport type HooksBefore = 'beforeOnce' | 'beforeLeave' | 'beforeEnter';\nexport type HooksAfter = 'afterOnce' | 'afterLeave' | 'afterEnter';\n\nexport type HooksTransition = HooksOnce | HooksPage;\nexport type HooksView = HooksBefore | HooksAfter;\nexport type HooksAll = HooksBarba | HooksTransition;\n\n// Allow optional \"dynamically created\" hooks\nexport type HooksTransitionMap = { [key in HooksTransition]?: any };\n\nexport type HookFunction = (\n  data?: ITransitionData | IViewData,\n  t?: ITransitionPage\n) => Promise<void> | void;\n\nexport class HookMethods {\n  public before: (fn: HookFunction, ctx?: any) => void;\n  public beforeLeave: (fn: HookFunction, ctx?: any) => void;\n  public leave: (fn: HookFunction, ctx?: any) => void;\n  public afterLeave: (fn: HookFunction, ctx?: any) => void;\n  public beforeEnter: (fn: HookFunction, ctx?: any) => void;\n  public enter: (fn: HookFunction, ctx?: any) => void;\n  public afterEnter: (fn: HookFunction, ctx?: any) => void;\n  public after: (fn: HookFunction, ctx?: any) => void;\n}\n","/**\n * Expose `pathToRegexp`.\n */\nmodule.exports = pathToRegexp\nmodule.exports.match = match\nmodule.exports.regexpToFunction = regexpToFunction\nmodule.exports.parse = parse\nmodule.exports.compile = compile\nmodule.exports.tokensToFunction = tokensToFunction\nmodule.exports.tokensToRegExp = tokensToRegExp\n\n/**\n * Default configs.\n */\nvar DEFAULT_DELIMITER = '/'\n\n/**\n * The main path matching regexp utility.\n *\n * @type {RegExp}\n */\nvar PATH_REGEXP = new RegExp([\n  // Match escaped characters that would otherwise appear in future matches.\n  // This allows the user to escape special characters that won't transform.\n  '(\\\\\\\\.)',\n  // Match Express-style parameters and un-named parameters with a prefix\n  // and optional suffixes. Matches appear as:\n  //\n  // \":test(\\\\d+)?\" => [\"test\", \"\\d+\", undefined, \"?\"]\n  // \"(\\\\d+)\"  => [undefined, undefined, \"\\d+\", undefined]\n  '(?:\\\\:(\\\\w+)(?:\\\\(((?:\\\\\\\\.|[^\\\\\\\\()])+)\\\\))?|\\\\(((?:\\\\\\\\.|[^\\\\\\\\()])+)\\\\))([+*?])?'\n].join('|'), 'g')\n\n/**\n * Parse a string for the raw tokens.\n *\n * @param  {string}  str\n * @param  {Object=} options\n * @return {!Array}\n */\nfunction parse (str, options) {\n  var tokens = []\n  var key = 0\n  var index = 0\n  var path = ''\n  var defaultDelimiter = (options && options.delimiter) || DEFAULT_DELIMITER\n  var whitelist = (options && options.whitelist) || undefined\n  var pathEscaped = false\n  var res\n\n  while ((res = PATH_REGEXP.exec(str)) !== null) {\n    var m = res[0]\n    var escaped = res[1]\n    var offset = res.index\n    path += str.slice(index, offset)\n    index = offset + m.length\n\n    // Ignore already escaped sequences.\n    if (escaped) {\n      path += escaped[1]\n      pathEscaped = true\n      continue\n    }\n\n    var prev = ''\n    var name = res[2]\n    var capture = res[3]\n    var group = res[4]\n    var modifier = res[5]\n\n    if (!pathEscaped && path.length) {\n      var k = path.length - 1\n      var c = path[k]\n      var matches = whitelist ? whitelist.indexOf(c) > -1 : true\n\n      if (matches) {\n        prev = c\n        path = path.slice(0, k)\n      }\n    }\n\n    // Push the current path onto the tokens.\n    if (path) {\n      tokens.push(path)\n      path = ''\n      pathEscaped = false\n    }\n\n    var repeat = modifier === '+' || modifier === '*'\n    var optional = modifier === '?' || modifier === '*'\n    var pattern = capture || group\n    var delimiter = prev || defaultDelimiter\n\n    tokens.push({\n      name: name || key++,\n      prefix: prev,\n      delimiter: delimiter,\n      optional: optional,\n      repeat: repeat,\n      pattern: pattern\n        ? escapeGroup(pattern)\n        : '[^' + escapeString(delimiter === defaultDelimiter ? delimiter : (delimiter + defaultDelimiter)) + ']+?'\n    })\n  }\n\n  // Push any remaining characters.\n  if (path || index < str.length) {\n    tokens.push(path + str.substr(index))\n  }\n\n  return tokens\n}\n\n/**\n * Compile a string to a template function for the path.\n *\n * @param  {string}             str\n * @param  {Object=}            options\n * @return {!function(Object=, Object=)}\n */\nfunction compile (str, options) {\n  return tokensToFunction(parse(str, options), options)\n}\n\n/**\n * Create path match function from `path-to-regexp` spec.\n */\nfunction match (str, options) {\n  var keys = []\n  var re = pathToRegexp(str, keys, options)\n  return regexpToFunction(re, keys)\n}\n\n/**\n * Create a path match function from `path-to-regexp` output.\n */\nfunction regexpToFunction (re, keys) {\n  return function (pathname, options) {\n    var m = re.exec(pathname)\n    if (!m) return false\n\n    var path = m[0]\n    var index = m.index\n    var params = {}\n    var decode = (options && options.decode) || decodeURIComponent\n\n    for (var i = 1; i < m.length; i++) {\n      if (m[i] === undefined) continue\n\n      var key = keys[i - 1]\n\n      if (key.repeat) {\n        params[key.name] = m[i].split(key.delimiter).map(function (value) {\n          return decode(value, key)\n        })\n      } else {\n        params[key.name] = decode(m[i], key)\n      }\n    }\n\n    return { path: path, index: index, params: params }\n  }\n}\n\n/**\n * Expose a method for transforming tokens into the path function.\n */\nfunction tokensToFunction (tokens, options) {\n  // Compile all the tokens into regexps.\n  var matches = new Array(tokens.length)\n\n  // Compile all the patterns before compilation.\n  for (var i = 0; i < tokens.length; i++) {\n    if (typeof tokens[i] === 'object') {\n      matches[i] = new RegExp('^(?:' + tokens[i].pattern + ')$', flags(options))\n    }\n  }\n\n  return function (data, options) {\n    var path = ''\n    var encode = (options && options.encode) || encodeURIComponent\n    var validate = options ? options.validate !== false : true\n\n    for (var i = 0; i < tokens.length; i++) {\n      var token = tokens[i]\n\n      if (typeof token === 'string') {\n        path += token\n        continue\n      }\n\n      var value = data ? data[token.name] : undefined\n      var segment\n\n      if (Array.isArray(value)) {\n        if (!token.repeat) {\n          throw new TypeError('Expected \"' + token.name + '\" to not repeat, but got array')\n        }\n\n        if (value.length === 0) {\n          if (token.optional) continue\n\n          throw new TypeError('Expected \"' + token.name + '\" to not be empty')\n        }\n\n        for (var j = 0; j < value.length; j++) {\n          segment = encode(value[j], token)\n\n          if (validate && !matches[i].test(segment)) {\n            throw new TypeError('Expected all \"' + token.name + '\" to match \"' + token.pattern + '\"')\n          }\n\n          path += (j === 0 ? token.prefix : token.delimiter) + segment\n        }\n\n        continue\n      }\n\n      if (typeof value === 'string' || typeof value === 'number' || typeof value === 'boolean') {\n        segment = encode(String(value), token)\n\n        if (validate && !matches[i].test(segment)) {\n          throw new TypeError('Expected \"' + token.name + '\" to match \"' + token.pattern + '\", but got \"' + segment + '\"')\n        }\n\n        path += token.prefix + segment\n        continue\n      }\n\n      if (token.optional) continue\n\n      throw new TypeError('Expected \"' + token.name + '\" to be ' + (token.repeat ? 'an array' : 'a string'))\n    }\n\n    return path\n  }\n}\n\n/**\n * Escape a regular expression string.\n *\n * @param  {string} str\n * @return {string}\n */\nfunction escapeString (str) {\n  return str.replace(/([.+*?=^!:${}()[\\]|/\\\\])/g, '\\\\$1')\n}\n\n/**\n * Escape the capturing group by escaping special characters and meaning.\n *\n * @param  {string} group\n * @return {string}\n */\nfunction escapeGroup (group) {\n  return group.replace(/([=!:$/()])/g, '\\\\$1')\n}\n\n/**\n * Get the flags for a regexp from the options.\n *\n * @param  {Object} options\n * @return {string}\n */\nfunction flags (options) {\n  return options && options.sensitive ? '' : 'i'\n}\n\n/**\n * Pull out keys from a regexp.\n *\n * @param  {!RegExp} path\n * @param  {Array=}  keys\n * @return {!RegExp}\n */\nfunction regexpToRegexp (path, keys) {\n  if (!keys) return path\n\n  // Use a negative lookahead to match only capturing groups.\n  var groups = path.source.match(/\\((?!\\?)/g)\n\n  if (groups) {\n    for (var i = 0; i < groups.length; i++) {\n      keys.push({\n        name: i,\n        prefix: null,\n        delimiter: null,\n        optional: false,\n        repeat: false,\n        pattern: null\n      })\n    }\n  }\n\n  return path\n}\n\n/**\n * Transform an array into a regexp.\n *\n * @param  {!Array}  path\n * @param  {Array=}  keys\n * @param  {Object=} options\n * @return {!RegExp}\n */\nfunction arrayToRegexp (path, keys, options) {\n  var parts = []\n\n  for (var i = 0; i < path.length; i++) {\n    parts.push(pathToRegexp(path[i], keys, options).source)\n  }\n\n  return new RegExp('(?:' + parts.join('|') + ')', flags(options))\n}\n\n/**\n * Create a path regexp from string input.\n *\n * @param  {string}  path\n * @param  {Array=}  keys\n * @param  {Object=} options\n * @return {!RegExp}\n */\nfunction stringToRegexp (path, keys, options) {\n  return tokensToRegExp(parse(path, options), keys, options)\n}\n\n/**\n * Expose a function for taking tokens and returning a RegExp.\n *\n * @param  {!Array}  tokens\n * @param  {Array=}  keys\n * @param  {Object=} options\n * @return {!RegExp}\n */\nfunction tokensToRegExp (tokens, keys, options) {\n  options = options || {}\n\n  var strict = options.strict\n  var start = options.start !== false\n  var end = options.end !== false\n  var delimiter = options.delimiter || DEFAULT_DELIMITER\n  var endsWith = [].concat(options.endsWith || []).map(escapeString).concat('$').join('|')\n  var route = start ? '^' : ''\n\n  // Iterate over the tokens and create our regexp string.\n  for (var i = 0; i < tokens.length; i++) {\n    var token = tokens[i]\n\n    if (typeof token === 'string') {\n      route += escapeString(token)\n    } else {\n      var capture = token.repeat\n        ? '(?:' + token.pattern + ')(?:' + escapeString(token.delimiter) + '(?:' + token.pattern + '))*'\n        : token.pattern\n\n      if (keys) keys.push(token)\n\n      if (token.optional) {\n        if (!token.prefix) {\n          route += '(' + capture + ')?'\n        } else {\n          route += '(?:' + escapeString(token.prefix) + '(' + capture + '))?'\n        }\n      } else {\n        route += escapeString(token.prefix) + '(' + capture + ')'\n      }\n    }\n  }\n\n  if (end) {\n    if (!strict) route += '(?:' + escapeString(delimiter) + ')?'\n\n    route += endsWith === '$' ? '$' : '(?=' + endsWith + ')'\n  } else {\n    var endToken = tokens[tokens.length - 1]\n    var isEndDelimited = typeof endToken === 'string'\n      ? endToken[endToken.length - 1] === delimiter\n      : endToken === undefined\n\n    if (!strict) route += '(?:' + escapeString(delimiter) + '(?=' + endsWith + '))?'\n    if (!isEndDelimited) route += '(?=' + escapeString(delimiter) + '|' + endsWith + ')'\n  }\n\n  return new RegExp(route, flags(options))\n}\n\n/**\n * Normalize the given path string, returning a regular expression.\n *\n * An empty array can be passed in for the keys, which will hold the\n * placeholder key descriptions. For example, using `/user/:id`, `keys` will\n * contain `[{ name: 'id', delimiter: '/', optional: false, repeat: false }]`.\n *\n * @param  {(string|RegExp|Array)} path\n * @param  {Array=}                keys\n * @param  {Object=}               options\n * @return {!RegExp}\n */\nfunction pathToRegexp (path, keys, options) {\n  if (path instanceof RegExp) {\n    return regexpToRegexp(path, keys)\n  }\n\n  if (Array.isArray(path)) {\n    return arrayToRegexp(/** @type {!Array} */ (path), keys, options)\n  }\n\n  return stringToRegexp(/** @type {string} */ (path), keys, options)\n}\n","/**\n * @barba/core/schemas\n * <br><br>\n * ## Schemas description.\n *\n * @module core/schemas\n * @preferred\n */\n\n/***/\n\n// Definitions\nimport { ISchemaAttribute } from '../defs';\n\n/**\n * See [[ISchemaAttribute]]\n */\nexport const schemaAttribute: ISchemaAttribute = {\n  container: 'container',\n  history: 'history',\n  namespace: 'namespace',\n  prefix: 'data-barba',\n  prevent: 'prevent',\n  wrapper: 'wrapper',\n};\n","/**\n * @barba/core/utils/dom\n * <br><br>\n * ## Dom utils\n *\n * - Access DOM contents\n * - DOM vs string conversions\n *\n * @module core/utils/dom\n * @preferred\n */\n\n/***/\n\nimport path from 'path';\n\n// Definitions\nimport { ISchemaAttribute, Link, Scope, Wrapper } from '../defs';\n// Schemas\nimport { schemaAttribute } from '../schemas/attribute';\n\nexport class Dom {\n  private _attr: ISchemaAttribute = schemaAttribute;\n  private _parser: DOMParser = new DOMParser();\n\n  /**\n   * Convert HTMLDocument to string.\n   */\n  public toString(el: HTMLElement): string {\n    return el.outerHTML;\n  }\n\n  /**\n   * Parse HTML string to HTMLDocument.\n   */\n  // see https://github.com/barbajs/barba/issues/362\n  // Seems that using DOMParser.parseFromString causes this issue.\n  public toDocument(htmlString: string): HTMLDocument {\n    return this._parser.parseFromString(htmlString, 'text/html');\n  }\n\n  /**\n   * Parse HTML string to DIVElement.\n   *\n   * DOMParser.parseFromString fails with img[srcset] on iOS.\n   * see https://github.com/barbajs/barba/issues/362\n   */\n  public toElement(htmlString: string): HTMLDivElement {\n    const div = document.createElement('div');\n\n    div.innerHTML = htmlString;\n    return div;\n  }\n\n  /**\n   * Get HTML content.\n   */\n  public getHtml(doc: HTMLDocument = document): string {\n    return this.toString(doc.documentElement);\n  }\n\n  /**\n   * Get full document content.\n   */\n  // getDocument(el = document.documentElement) {\n  //   return this.toStr(el);\n  // },\n\n  /**\n   * Get `[data-barba=\"wrapper\"]`.\n   */\n  public getWrapper(scope: Scope = document): Wrapper {\n    return scope.querySelector(\n      `[${this._attr.prefix}=\"${this._attr.wrapper}\"]`\n    );\n  }\n\n  /**\n   * Get `[data-barba=\"container\"]`.\n   */\n  public getContainer(scope: Scope = document): HTMLElement | null {\n    return scope.querySelector(\n      `[${this._attr.prefix}=\"${this._attr.container}\"]`\n    );\n  }\n\n  /**\n   * Remove container and store next sibling (if applicable).\n   */\n  public removeContainer(container: HTMLElement) {\n    if (document.body.contains(container)) {\n      container.parentNode.removeChild(container);\n    }\n  }\n\n  /**\n   * Add container before next sibling or at the end of the wrapper.\n   */\n  public addContainer(container: HTMLElement, wrapper: HTMLElement) {\n    const existingContainer = this.getContainer();\n\n    if (existingContainer) {\n      this._insertAfter(container, existingContainer);\n    } else {\n      wrapper.appendChild(container);\n    }\n  }\n\n  /**\n   * Get `[data-barba-namespace]`.\n   */\n  public getNamespace(scope: Scope = document): string | null {\n    const ns = scope.querySelector(\n      `[${this._attr.prefix}-${this._attr.namespace}]`\n    );\n\n    return ns\n      ? ns.getAttribute(`${this._attr.prefix}-${this._attr.namespace}`)\n      : null;\n  }\n\n  /**\n   * Get URL from `href` value.\n   */\n  public getHref(el: Link): string | null {\n    // HTML tagName is UPPERCASE, xhtml tagName keeps existing case.\n    if (el.tagName && el.tagName.toLowerCase() === 'a') {\n      // HTMLAnchorElement, full URL available\n      if (typeof el.href === 'string') {\n        return el.href;\n      }\n\n      // Probably a SVGAElement…\n      const href = el.getAttribute('href') || el.getAttribute('xlink:href');\n\n      /* istanbul ignore else */\n      if (href) {\n        // When link comes from SVG, `href` returns an object, not a string.\n        const attr: string =\n          ((href as unknown) as SVGAnimatedString).baseVal || href;\n\n        return this.resolveUrl(attr);\n      }\n    }\n    return null;\n  }\n\n  // Copyright 2014 Simon Lydell\n  // X11 (“MIT”) Licensed. (See LICENSE\n  // https://github.com/lydell/resolve-url/blob/master/resolve-url.js\n  /* istanbul ignore next */\n  public resolveUrl(...urls: string[]) {\n    const numUrls = urls.length;\n\n    if (numUrls === 0) {\n      throw new Error('resolveUrl requires at least one argument; got none.');\n    }\n\n    const base = document.createElement('base');\n    base.href = arguments[0];\n\n    if (numUrls === 1) {\n      return base.href;\n    }\n\n    const head = document.getElementsByTagName('head')[0];\n    head.insertBefore(base, head.firstChild);\n\n    const a = document.createElement('a');\n    let resolved;\n\n    for (let index = 1; index < numUrls; index++) {\n      a.href = arguments[index];\n      resolved = a.href;\n      base.href = resolved;\n    }\n\n    head.removeChild(base);\n\n    return resolved;\n  }\n\n  /**\n   * Insert node after another node.\n   */\n  private _insertAfter(newNode: Node, referenceNode: Node) {\n    referenceNode.parentNode.insertBefore(newNode, referenceNode.nextSibling);\n  }\n}\n\nconst dom = new Dom();\n\nexport { dom };\n","import { HistoryAction, LinkEvent, Trigger } from '../defs';\n// Schemas\nimport { schemaAttribute } from '../schemas/attribute';\n\n/**\n * @barba/core/utils/history\n * <br><br>\n * ## History manager.\n *\n * - Keep track of the navigation history\n *\n * @module core/utils/history\n * @preferred\n */\n\n/**\n * State item.\n *\n * @property from\n * @property index\n */\ninterface IHistoryItem {\n  /** origin */\n  from: string;\n  /** index */\n  index: number;\n  /** states */\n  states: IStateItem[];\n}\n\n/***/\ninterface ICoords {\n  x: number;\n  y: number;\n}\n\n/**\n * History item.\n *\n * @property namespace\n * @property scroll\n * @property URL\n */\ninterface IStateItem {\n  /** namespace */\n  ns: string | undefined;\n  /** Scroll position */\n  scroll: ICoords;\n  /** URL */\n  url: string;\n}\n\nexport class History {\n  private _session: string;\n  private _states: IStateItem[] = [];\n  private _pointer = -1;\n\n  /**\n   * Init with first state.\n   */\n  public init(url: string, ns: string): void {\n    this._session = 'barba';\n    const index = 0;\n\n    const state: IStateItem = {\n      ns,\n      scroll: {\n        x: window.scrollX,\n        y: window.scrollY,\n      },\n      url,\n    };\n\n    this._states.push(state);\n    this._pointer = index;\n\n    const item: IHistoryItem = {\n      from: this._session,\n      index,\n      states: [...this._states],\n    };\n\n    window.history && window.history.replaceState(item, '', url);\n  }\n\n  public change(\n    url: string,\n    trigger: Trigger,\n    e?: LinkEvent | PopStateEvent\n  ): Trigger {\n    if (e && (e as PopStateEvent).state) {\n      // If popstate, move to existing state\n      // and get back/forward direction.\n      const { state }: { state: IHistoryItem } = e as PopStateEvent;\n      const { index } = state;\n      const diff = this._pointer - index;\n\n      trigger = this._getDirection(diff);\n\n      // Work with previous states\n      this.replace(state.states);\n      this._pointer = index;\n    } else {\n      // Add new state\n      this.add(url, trigger);\n    }\n\n    return trigger;\n  }\n\n  /**\n   * Add a new state.\n   */\n  public add(url: string, trigger: Trigger): void {\n    // If no state, it will be updated later.\n    const ns = 'tmp';\n    const index = this.size;\n    const action = this._getAction(trigger);\n    const state: IStateItem = {\n      ns,\n      scroll: {\n        x: window.scrollX,\n        y: window.scrollY,\n      },\n      url,\n    };\n\n    this._states.push(state);\n    this._pointer = index;\n\n    const item: IHistoryItem = {\n      from: this._session,\n      index,\n      states: [...this._states],\n    };\n\n    switch (action) {\n      case 'push':\n        window.history && window.history.pushState(item, '', url);\n        break;\n      case 'replace':\n        window.history && window.history.replaceState(item, '', url);\n        break;\n      /* istanbul ignore next */\n      default:\n    }\n  }\n\n  /**\n   * Update state.\n   */\n  public update(data: any, i?: number): void {\n    const index = i || this._pointer;\n    const existing = this.get(index);\n    const state: IStateItem = {\n      ...existing,\n      ...data,\n    };\n\n    this.set(index, state);\n  }\n\n  /**\n   * Remove last state.\n   */\n  public remove(i?: number): void {\n    if (i) {\n      this._states.splice(i, 1);\n    } else {\n      this._states.pop();\n    }\n\n    this._pointer--;\n  }\n\n  /**\n   * Delete all states.\n   */\n  public clear(): void {\n    this._states = [];\n    this._pointer = -1;\n  }\n\n  /**\n   * Replace all states.\n   */\n  public replace(newStates: IStateItem[]): void {\n    this._states = newStates;\n  }\n\n  /**\n   * Get state by index.\n   */\n  public get(index: number) {\n    return this._states[index];\n  }\n\n  /**\n   * Set state by index.\n   */\n  public set(i: number, state: IStateItem) {\n    return (this._states[i] = state);\n  }\n\n  /**\n   * Get the current state.\n   */\n  get current(): IStateItem {\n    return this._states[this._pointer];\n  }\n\n  /**\n   * Get the last state (top of the history stack).\n   */\n  get state(): IStateItem {\n    return this._states[this._states.length - 1];\n  }\n\n  /**\n   * Get the previous state.\n   */\n  get previous(): IStateItem | null {\n    return this._pointer < 1 ? null : this._states[this._pointer - 1];\n  }\n\n  /**\n   * Get the state size.\n   */\n  get size(): number {\n    return this._states.length;\n  }\n\n  /**\n   * Get the history action: push vs replace\n   */\n  private _getAction(trigger: Trigger): HistoryAction {\n    let action: HistoryAction = 'push';\n\n    // Manage `data-barba-history` attribute\n    // to get the right action (push vs replace).\n    const el = trigger as HTMLAnchorElement;\n    const attr = `${schemaAttribute.prefix}-${schemaAttribute.history}`;\n\n    if (el.hasAttribute && el.hasAttribute(attr)) {\n      action = el.getAttribute(attr) as HistoryAction;\n    }\n\n    return action;\n  }\n\n  /**\n   * Get the direction of popstate change\n   */\n  private _getDirection(diff: number): Trigger {\n    // Check if \"session switch\"\n    if (Math.abs(diff) > 1) {\n      // Ex 6-0 > 0 -> forward, 0-6 < 0 -> back\n      return diff > 0 ? 'forward' : 'back';\n    } else {\n      if (diff === 0) {\n        return 'popstate';\n      } else {\n        // Ex 6-5 > 0 -> back, 5-6 < 0 -> forward\n        return diff > 0 ? 'back' : 'forward';\n      }\n    }\n  }\n}\n\nconst history = new History();\n\nexport { history };\n","/**\n * @barba/core/utils/helpers\n * <br><br>\n * ## Helpers\n *\n * - Update next page data\n *\n * @module core/utils/helpers\n * @preferred\n */\n\n/***/\n\n// Third-party\nimport ptr from 'path-to-regexp';\n// Definitions\nimport { ITransitionData } from '../defs';\n// Utils\nimport { dom } from './dom';\nimport { history } from './history';\n\n/**\n * Update `data.next`, the title and the history\n */\nexport const update = async (\n  page: Promise<string | void>,\n  data: ITransitionData\n): Promise<void> => {\n  // If not already updated\n  if (!data.next.html) {\n    const html = await page;\n    const { next } = data;\n\n    if (html) {\n      // see: https://github.com/barbajs/barba/issues/362\n      // const nextDocument = dom.toDocument(html);\n      const nextDocument = dom.toElement(html);\n\n      next.namespace = dom.getNamespace(nextDocument);\n      next.container = dom.getContainer(nextDocument);\n      // see https://github.com/barbajs/barba/issues/362\n      // next.html = dom.getHtml(nextDocument);\n      // next.html = nextDocument.innerHTML;\n      next.html = html;\n\n      // Update history namespace (not available when initially set)\n      history.update({ ns: next.namespace });\n\n      // Update title.\n      const { title } = dom.toDocument(html);\n\n      document.title = title;\n    }\n  }\n};\n\n/**\n * Next tick\n */\nexport const nextTick = () =>\n  new Promise(resolve => {\n    window.requestAnimationFrame(resolve);\n    // DEV: same result?\n    // setTimeout(resolve, 0);\n  });\n\n/**\n * Turn a route string such as `/user/:name` into a regular expression.\n *\n * Used for:\n *\n * - routes to ignore\n * - route transition resolution\n *\n * @see https://www.npmjs.com/package/path-to-regexp\n */\nconst pathToRegexp = ptr;\n\nexport { pathToRegexp };\n","/**\n * @barba/core/utils/url\n * <br><br>\n * ## URL utils.\n *\n * - Collect and structure informations from URLs\n *\n * @module core/utils/url\n */\n\n/***/\n\n// Definitions\nimport { IGenericObject, IUrlBase } from '../defs';\n\n/**\n * Get location href.\n */\nexport const getHref = () => window.location.href;\n\n/**\n * Get location origin.\n */\nexport const getOrigin = () => window.location.origin;\n\n/**\n * Get port based on URL or location.\n */\nexport const getPort = (url: string = window.location.href) => parse(url).port;\n\n/**\n * Get path from URL.\n */\nexport const getPath = (url: string = window.location.href) => parse(url).path;\n\n/**\n * Get query object from URL.\n */\n// export const getQuery = (url: string): IGenericObject => parse(url).query;\n\n/**\n * Get hash from URL.\n */\n// export const getHash = (url: string): string => parse(url).hash;\n\n/**\n * Parse URL for path, query and hash and more.\n */\nexport const parse = (url: string): IUrlBase => {\n  // Port\n  let port;\n  const matches = url.match(/:\\d+/);\n\n  if (matches === null) {\n    if (/^http/.test(url)) {\n      port = 80;\n    }\n\n    if (/^https/.test(url)) {\n      port = 443;\n    }\n  } else {\n    const portString = matches[0].substring(1);\n\n    port = parseInt(portString, 10);\n  }\n\n  // Path\n  let path = url.replace(getOrigin(), '');\n  let hash;\n  let query = {};\n\n  // Hash\n  const hashIndex = path.indexOf('#');\n\n  if (hashIndex >= 0) {\n    hash = path.slice(hashIndex + 1);\n    path = path.slice(0, hashIndex);\n  }\n\n  // Query\n  const queryIndex = path.indexOf('?');\n\n  if (queryIndex >= 0) {\n    query = parseQuery(path.slice(queryIndex + 1));\n    path = path.slice(0, queryIndex);\n  }\n\n  return {\n    hash,\n    path,\n    port,\n    query,\n  };\n};\n\n/**\n * Parse a query string to object.\n */\nexport const parseQuery = (str: string) =>\n  str.split('&').reduce((acc: IGenericObject, el: string) => {\n    const [key, value] = el.split('=');\n\n    acc[key] = value;\n\n    return acc;\n  }, {});\n\n/**\n * Clean URL, remove \"hash\" and/or \"trailing slash\".\n */\nexport const clean = (url: string = window.location.href) =>\n  url.replace(/(\\/#.*|\\/|#.*)$/, '');\n","/**\n * @barba/core/utils/request\n * <br><br>\n * ## Fetch pages for transitions.\n *\n * - Includes timeout\n * - Uses Fetch API\n * - Handles errors\n *\n * @module core/utils/request\n * @preferred\n */\n\n/***/\n\n// Definitions\nimport { RequestError } from '../defs';\n\n/**\n * Init a page request.\n * Fetch the page and returns a promise with the text content.\n */\nfunction request(\n  url: string,\n  ttl: number = 2e3,\n  requestError: RequestError\n): Promise<string> {\n  return new Promise((resolve, reject) => {\n    const xhr = new XMLHttpRequest();\n\n    xhr.onreadystatechange = () => {\n      if (xhr.readyState === XMLHttpRequest.DONE) {\n        if (xhr.status === 200) {\n          resolve(xhr.responseText);\n        } else if (xhr.status) {\n          // HTTP code is not 200, reject with response.\n          const res = {\n            status: xhr.status,\n            statusText: xhr.statusText,\n          };\n          requestError(url, res);\n          reject(res);\n        }\n      }\n    };\n    xhr.ontimeout = () => {\n      const err = new Error(`Timeout error [${ttl}]`);\n      requestError(url, err);\n      reject(err);\n    };\n    xhr.onerror = () => {\n      const err = new Error(`Fetch error`);\n      requestError(url, err);\n      reject(err);\n    };\n\n    xhr.open('GET', url);\n    xhr.timeout = ttl;\n    xhr.setRequestHeader(\n      'Accept',\n      'text/html,application/xhtml+xml,application/xml'\n    );\n    xhr.setRequestHeader('x-barba', 'yes');\n    xhr.send();\n  });\n}\n\nexport { request };\n","module.exports = isPromise;\n\nfunction isPromise(obj) {\n  return !!obj && (typeof obj === 'object' || typeof obj === 'function') && typeof obj.then === 'function';\n}\n","import isPromise from 'is-promise';\n\n// https://github.com/SBoudrias/run-async\n/* istanbul ignore next */\nexport function runAsync(\n  func: (...args: any[]) => void | Promise<any>,\n  ctx: any = {}\n): (...args: any[]) => Promise<any> {\n  return (...args: any[]) => {\n    let async = false;\n\n    const promise = new Promise((resolve, reject) => {\n      // Add async to context\n      ctx.async = () => {\n        async = true;\n\n        return (err: any, value: any) => {\n          if (err) {\n            reject(err);\n          } else {\n            resolve(value);\n          }\n        };\n      };\n\n      const answer = func.apply(ctx, args as []);\n\n      if (!async) {\n        if (isPromise(answer)) {\n          (answer as Promise<any>).then(resolve, reject);\n        } else {\n          resolve(answer);\n        }\n      }\n    });\n\n    return promise;\n  };\n}\n","/**\n * @barba/core/modules/hooks\n * <br><br>\n * ## Hooks manager.\n *\n * - Register and trigger hooks\n *\n * Hooks can be easily registered:\n *\n * ```js\n * hooks.leave(callback, context);\n * ```\n *\n * @module core/modules/hooks\n * @preferred\n */\n\n/***/\n\n// Definitions\nimport { HookFunction, HookMethods, HooksAll } from './defs';\n// Modules\nimport { Logger } from './modules/Logger';\n// Utils\nimport { runAsync } from './utils';\n// Types\ninterface IHookInfos {\n  ctx: any;\n  fn: HookFunction;\n}\n\nexport class Hooks extends HookMethods {\n  /**\n   * Allow the use of `hooks[name](cb, ctx)`.\n   */\n  [key: string]: any;\n  // [key in HooksAll]?: any;\n  public logger: Logger = new Logger('@barba/core');\n  /**\n   * All available hooks.\n   *\n   * See [[HooksAll]]\n   */\n  // TODO: get hooks from defs (DRY)?\n  public all: HooksAll[] = [\n    'ready',\n    'page',\n    'reset',\n    'currentAdded',\n    'currentRemoved',\n    'nextAdded',\n    'nextRemoved',\n    'beforeOnce',\n    'once',\n    'afterOnce',\n    'before',\n    'beforeLeave',\n    'leave',\n    'afterLeave',\n    'beforeEnter',\n    'enter',\n    'afterEnter',\n    'after',\n  ];\n  /**\n   * Registered hooks.\n   *\n   * - Unique hook name\n   * - Associated data set(s) (callback + context)\n   */\n  public registered: Map<HooksAll, Set<IHookInfos>> = new Map();\n\n  constructor() {\n    super();\n    this.init();\n  }\n\n  public init() {\n    this.registered.clear();\n    this.all.forEach(hook => {\n      if (!this[hook]) {\n        this[hook] = (fn: HookFunction, ctx?: any) => {\n          if (!this.registered.has(hook)) {\n            this.registered.set(hook, new Set());\n          }\n          const set = this.registered.get(hook);\n\n          set.add({\n            ctx: ctx || {},\n            fn,\n          });\n        };\n      }\n    });\n  }\n\n  /**\n   * Do hook.\n   *\n   * Trigger registered hooks.\n   */\n  public do(name: HooksAll, ...args: any): Promise<any> {\n    if (this.registered.has(name)) {\n      // Let's start a chain of promises\n      let chain = Promise.resolve();\n\n      this.registered.get(name).forEach(hook => {\n        // Chain async hooks promisified\n        chain = chain.then(() => runAsync(hook.fn, hook.ctx)(...args));\n      });\n\n      return chain.catch(error => {\n        this.logger.debug(`Hook error [${name}]`);\n        this.logger.error(error);\n      });\n    }\n\n    return Promise.resolve();\n  }\n\n  public clear(): void {\n    this.all.forEach(hook => {\n      delete this[hook];\n    });\n\n    this.init();\n  }\n\n  /**\n   * Help, print available and registered hooks.\n   */\n  public help(): void {\n    this.logger.info(`Available hooks: ${this.all.join(',')}`);\n    const registered: string[] = [];\n    this.registered.forEach((value, key) => registered.push(key));\n    this.logger.info(`Registered hooks: ${registered.join(',')}`);\n  }\n}\n\nconst hooks = new Hooks();\n\nexport { hooks };\n","/**\n * @barba/core/modules/ignore\n * <br><br>\n * ## Manage ignore options.\n *\n * - cache\n * - prefetch\n *\n * @module core/modules/ignore\n * @preferred\n */\n\n/***/\n\n// Definitions\nimport { IgnoreOption } from '../defs';\n// Utils\nimport { pathToRegexp } from '../utils/helpers';\nimport { parse } from '../utils/url';\n\nexport class Ignore {\n  private _ignoreAll: boolean;\n  private _ignoreRegexes: RegExp[] = [];\n\n  constructor(ignore: IgnoreOption) {\n    if (typeof ignore === 'boolean') {\n      this._ignoreAll = ignore;\n    } else {\n      const paths = Array.isArray(ignore) ? ignore : [ignore];\n\n      this._ignoreRegexes = paths.map(p => pathToRegexp(p));\n    }\n  }\n\n  public checkHref(href: string): boolean {\n    if (typeof this._ignoreAll === 'boolean') {\n      return this._ignoreAll;\n    }\n\n    const { path } = parse(href);\n\n    return this._ignoreRegexes.some(regex => regex.exec(path) !== null);\n  }\n}\n","/**\n * @barba/core/modules/cache\n * <br><br>\n * ## Cache for storing URL / HTML.\n *\n * @module core/modules/cache\n * @preferred\n */\n\n/***/\n\n// Definitions\nimport { CacheAction, CacheRequest, ICacheData, IgnoreOption } from '../defs';\n// Modules\nimport { Ignore } from './Ignore';\n\nexport class Cache extends Ignore {\n  private _state: Map<string, ICacheData> = new Map();\n\n  constructor(ignore: IgnoreOption) {\n    super(ignore);\n  }\n\n  /**\n   * Set value to cache\n   */\n  public set(\n    href: string,\n    request: CacheRequest,\n    action: CacheAction\n  ): ICacheData {\n    this._state.set(href, {\n      action,\n      request,\n    });\n\n    return {\n      action,\n      request,\n    };\n  }\n\n  /**\n   * Get data from cache\n   */\n  public get(href: string): ICacheData {\n    return this._state.get(href);\n  }\n\n  /**\n   * Get request from cache\n   */\n  public getRequest(href: string): CacheRequest {\n    return this._state.get(href).request;\n  }\n\n  /**\n   * Get action from cache\n   */\n  public getAction(href: string): CacheAction {\n    return this._state.get(href).action;\n  }\n\n  /**\n   * Check if value exists into cache\n   */\n  public has(href: string): boolean {\n    /* istanbul ignore else */\n    if (this.checkHref(href)) {\n      return false;\n    }\n    return this._state.has(href);\n  }\n\n  /**\n   * Delete value from cache\n   */\n  public delete(href: string): boolean {\n    return this._state.delete(href);\n  }\n\n  /**\n   * Update cache value\n   */\n  public update(href: string, data: ICacheData): ICacheData {\n    const state = {\n      ...this._state.get(href),\n      ...data,\n    };\n    this._state.set(href, state);\n\n    return state;\n  }\n}\n","/**\n * @barba/core/modules/prevent\n * <br><br>\n * ## Prevent checks.\n *\n * - Gathers all the tests that allow Barba to work and play transitions\n *\n * @module core/modules/prevent\n * @preferred\n */\n\n/***/\n\n// Definitions\nimport { IgnoreOption, Link, PreventCheck } from '../defs';\n// Schemas\nimport { schemaAttribute } from '../schemas/attribute';\n// Utils\nimport { url } from '../utils';\n// Modules\nimport { Ignore } from './Ignore';\n\n/**\n * Make sure the browser supports `history.pushState`.\n */\nconst pushState: PreventCheck = () => !window.history.pushState;\n\n/**\n * Make sure there is an `el` and `href`.\n */\nconst exists: PreventCheck = ({ el, href }) => !el || !href;\n\n/**\n * If the user is pressing ctrl + click, the browser will open a new tab.\n */\nconst newTab: PreventCheck = ({ event }) =>\n  (event as KeyboardEvent).which > 1 ||\n  (event as KeyboardEvent).metaKey ||\n  (event as KeyboardEvent).ctrlKey ||\n  (event as KeyboardEvent).shiftKey ||\n  (event as KeyboardEvent).altKey;\n\n/**\n * If the link has `_blank` target.\n */\nconst blank: PreventCheck = ({ el }) =>\n  el.hasAttribute('target') && (el as Link).target === '_blank';\n\n/**\n * If the domain is the same (in order to avoid pushState cross origin security problem).\n * Note: SVGAElement do not have `protocol` neither `hostname` properties.\n */\nconst corsDomain: PreventCheck = ({ el }) =>\n  ((el as HTMLAnchorElement).protocol !== undefined &&\n    window.location.protocol !== (el as HTMLAnchorElement).protocol) ||\n  ((el as HTMLAnchorElement).hostname !== undefined &&\n    window.location.hostname !== (el as HTMLAnchorElement).hostname);\n\n/**\n * If the port is the same.\n * Note: SVGAElement do not have `port` property.\n */\nconst corsPort: PreventCheck = ({ el }) =>\n  (el as HTMLAnchorElement).port !== undefined &&\n  url.getPort() !== url.getPort((el as HTMLAnchorElement).href);\n\n/**\n * If the link has download attribute.\n */\nconst download: PreventCheck = ({ el }) =>\n  el.getAttribute && typeof el.getAttribute('download') === 'string';\n\n/**\n * If the links contains [data-barba-prevent] or [data-barba-prevent=\"self\"].\n */\nconst preventSelf: PreventCheck = ({ el }) =>\n  el.hasAttribute(`${schemaAttribute.prefix}-${schemaAttribute.prevent}`);\n\n/**\n * If some link ancestor contains [data-barba-prevent=\"all\"].\n */\nconst preventAll: PreventCheck = ({ el }) =>\n  Boolean(\n    el.closest(`[${schemaAttribute.prefix}-${schemaAttribute.prevent}=\"all\"]`)\n  );\n\n/**\n * If the link is the current URL.\n *\n * > Not in the test suite.\n */\nconst sameUrl: PreventCheck = ({ href }) =>\n  url.clean(href) === url.clean() && url.getPort(href) === url.getPort();\n\nexport class Prevent extends Ignore {\n  public suite: string[] = [];\n  public tests: Map<string, PreventCheck> = new Map();\n\n  constructor(ignore: IgnoreOption) {\n    super(ignore);\n    this.init();\n  }\n\n  public init(): void {\n    // Add defaults\n    this.add('pushState', pushState);\n    this.add('exists', exists);\n    this.add('newTab', newTab);\n    this.add('blank', blank);\n    this.add('corsDomain', corsDomain);\n    this.add('corsPort', corsPort);\n    this.add('download', download);\n    this.add('preventSelf', preventSelf);\n    this.add('preventAll', preventAll);\n\n    // Outside of the test suite\n    this.add('sameUrl', sameUrl, false);\n  }\n\n  public add(name: string, check: PreventCheck, suite: boolean = true): void {\n    this.tests.set(name, check);\n    suite && this.suite.push(name);\n  }\n\n  /**\n   * Run individual test\n   */\n  public run(name: string, el: Link, event: Event, href: string): boolean {\n    return this.tests.get(name)({\n      el,\n      event,\n      href,\n    });\n  }\n\n  /**\n   * Run test suite\n   */\n  public checkLink(el: Link, event: Event, href: string): boolean {\n    return this.suite.some(name => this.run(name, el, event, href));\n  }\n}\n","// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error\nexport class BarbaError extends Error {\n  /* istanbul ignore next */\n  constructor(\n    public error: Error,\n    public label = 'Barba error',\n    ...params: any[]\n  ) {\n    // Pass remaining arguments (including vendor specific ones) to parent constructor\n    super(...params);\n\n    // Maintains proper stack trace for where our error was thrown (only available on V8)\n    /* istanbul ignore else */\n    if (Error.captureStackTrace) {\n      Error.captureStackTrace(this, BarbaError);\n    }\n\n    this.name = 'BarbaError';\n  }\n}\n","/**\n * @barba/core/modules/store\n * <br><br>\n * ## Transitions store.\n *\n * - Resolve transition\n * - Manage rules\n *\n * @module core/modules/store\n * @preferred\n */\n\n/***/\n\n// Definitions\nimport {\n  IRule,\n  IRules,\n  ITransitionData,\n  ITransitionFilters,\n  ITransitionOnce,\n  ITransitionPage,\n  RuleName,\n} from '../defs';\n\n// Modules\nimport { Logger } from './Logger';\n\nexport class Store {\n  public logger: Logger = new Logger('@barba/core');\n  /**\n   * All registered transitions.\n   */\n  public all: ITransitionPage[] = [];\n  /**\n   * \"Page only\" registered transitions.\n   */\n  public page: ITransitionPage[] = [];\n  /**\n   * \"Once only\" registered transitions.\n   */\n  public once: ITransitionOnce[] = [];\n  /**\n   * Rules for transition resolution.\n   *\n   * Defaults:\n   *\n   * - namespace\n   * - custom\n   */\n  private _rules: IRule[] = [\n    {\n      name: 'namespace',\n      type: 'strings',\n    },\n    {\n      name: 'custom',\n      type: 'function',\n    },\n  ];\n\n  /**\n   * Init store.\n   */\n  constructor(transitions: ITransitionPage[] = []) {\n    /* istanbul ignore else */\n    if (transitions) {\n      // TODO: add check for valid transitions? criteria? (once || enter && leave)\n      this.all = this.all.concat(transitions);\n    }\n    this.update();\n  }\n\n  /**\n   * Add rule or transition.\n   */\n  public add(type: 'rule' | 'transition', data: any): void {\n    switch (type) {\n      case 'rule':\n        // TODO: check for valid rule\n        this._rules.splice(data.position || 0, 0, data.value);\n        break;\n      case 'transition':\n      default:\n        // TODO: check for valid transition\n        this.all.push(data);\n        break;\n    }\n\n    this.update();\n  }\n\n  /**\n   * Resolve transition.\n   */\n  public resolve(\n    data: ITransitionData,\n    filters: ITransitionFilters = {}\n  ): ITransitionOnce | ITransitionPage {\n    // Filter on \"once\"\n    let transitions = filters.once ? this.once : this.page;\n\n    // Filter on \"self\"\n    if (filters.self) {\n      transitions = transitions.filter(t => t.name && t.name === 'self');\n    } else {\n      transitions = transitions.filter(t => !t.name || t.name !== 'self');\n    }\n\n    // All matching transition infos\n    const matching = new Map();\n\n    // Active = first of valid transitions\n    // sorted by directions (from/to, from || to, …)\n    const active = transitions.find(t => {\n      let valid = true;\n      const match = {};\n\n      if (filters.self && t.name === 'self') {\n        return true;\n      }\n\n      // Check rules\n      this._rules.reverse().forEach(rule => {\n        if (valid) {\n          valid = this._check(t, rule, data, match);\n          // From/to check\n          if (t.from && t.to) {\n            valid =\n              this._check(t, rule, data, match, 'from') &&\n              this._check(t, rule, data, match, 'to');\n          }\n          if (t.from && !t.to) {\n            valid = this._check(t, rule, data, match, 'from');\n          }\n          if (!t.from && t.to) {\n            valid = this._check(t, rule, data, match, 'to');\n          }\n        }\n      });\n\n      matching.set(t, match);\n\n      return valid;\n    });\n\n    const activeMatch = matching.get(active);\n    const transitionType = [];\n    if (filters.once) {\n      transitionType.push('once');\n    } else {\n      transitionType.push('page');\n    }\n    if (filters.self) {\n      transitionType.push('self');\n    }\n\n    if (activeMatch) {\n      // Log resolved transition\n      const infos: any[] = [active];\n      // Log if matching criteria\n      Object.keys(activeMatch).length > 0 && infos.push(activeMatch);\n\n      this.logger.info(\n        `Transition found [${transitionType.join(',')}]`,\n        ...infos\n      );\n    } else {\n      this.logger.info(`No transition found [${transitionType.join(',')}]`);\n    }\n\n    return active;\n  }\n\n  /**\n   * ### Update store.\n   *\n   * - Reorder transition by priorities\n   * - Get wait indicator\n   * - Get once transitions\n   */\n  public update(): void {\n    // Reorder by priorities\n    this.all = this.all\n      .map(t => this._addPriority(t))\n      .sort((a, b) => a.priority - b.priority)\n      .reverse()\n      .map(t => {\n        delete t.priority;\n\n        return t;\n      });\n    this.page = this.all.filter(\n      t => t.leave !== undefined || t.enter !== undefined\n    ) as ITransitionPage[];\n    this.once = this.all.filter(t => t.once !== undefined) as ITransitionOnce[];\n  }\n\n  /**\n   * ### Check if transition apply.\n   *\n   * Based on rule, page data and optional direction:\n   *\n   * 1. transition has no rule \"property\":\n   *    - always returns true\n   * 2. transition has rule \"property\":\n   *     - \"strings\" should be present on both side (transition + page) and match\n   *     - \"function\" should return true\n   */\n  private _check(\n    transition: ITransitionPage,\n    rule: IRule,\n    data: ITransitionData,\n    match: any,\n    direction?: 'from' | 'to'\n  ): boolean {\n    let isValid = true;\n    let hasMatch = false;\n    const t = transition;\n    const { name, type } = rule;\n    const strRule = name as IRules['strings'];\n    const objRule = name as IRules['object'];\n    const fnName = name as IRules['function'];\n    const base = direction ? t[direction] : t; // = t || t.from || t.to\n    const page = direction === 'to' ? data.next : data.current; // = current || next\n    const exist = direction ? base && base[name] : base[name];\n\n    // If transition rule exists\n    if (exist) {\n      switch (type) {\n        case 'strings':\n        default: {\n          // Array support\n          const names: string[] = Array.isArray(base[strRule])\n            ? (base[strRule] as string[])\n            : [base[strRule] as string];\n\n          // For matching, prop should be present on both sides and match\n          if (page[strRule] && names.indexOf(page[strRule]) !== -1) {\n            hasMatch = true;\n          }\n          // If transition prop is different from current, not valid\n          if (names.indexOf(page[strRule]) === -1) {\n            isValid = false;\n          }\n          break;\n        }\n\n        case 'object': {\n          // Array support\n          const names: string[] = Array.isArray(base[objRule])\n            ? (base[objRule] as string[])\n            : [base[objRule] as string];\n\n          // For matching, prop should be present on both sides and match\n          if (page[objRule]) {\n            if (\n              page[objRule].name &&\n              names.indexOf(page[objRule].name) !== -1\n            ) {\n              hasMatch = true;\n            }\n            // If transition prop is different from current, not valid\n            if (names.indexOf(page[objRule].name) === -1) {\n              isValid = false;\n            }\n          } else {\n            isValid = false;\n          }\n          break;\n        }\n\n        case 'function':\n          if (base[fnName](data)) {\n            hasMatch = true;\n          } else {\n            isValid = false;\n          }\n          break;\n      }\n\n      if (hasMatch) {\n        if (direction) {\n          match[direction] = match[direction] || {};\n          match[direction][name] = t[direction][name];\n        } else {\n          match[name] = t[name];\n        }\n      }\n    }\n\n    return isValid;\n  }\n\n  /**\n   * ### Calculate transition priority.\n   *\n   * Based on:\n   *\n   * - rule \"position\" (index) give tens, hundreds, thousands, …\n   * - from/to properties give units (0, 1 or 2)\n   */\n  private _calculatePriority(\n    t: ITransitionPage,\n    ruleName: RuleName,\n    ruleIndex: number\n  ): number {\n    let priority = 0;\n\n    if (\n      t[ruleName] ||\n      (t.from && t.from[ruleName]) ||\n      (t.to && t.to[ruleName])\n    ) {\n      priority += Math.pow(10, ruleIndex);\n\n      if (t.from && t.from[ruleName]) {\n        priority += 1;\n      }\n      if (t.to && t.to[ruleName]) {\n        priority += 2;\n      }\n    }\n\n    return priority;\n  }\n\n  private _addPriority(t: ITransitionPage): ITransitionPage {\n    t.priority = 0;\n    let priority = 0;\n\n    this._rules.forEach((rule, i) => {\n      const { name } = rule;\n      const index = i + 1;\n\n      priority += this._calculatePriority(t, name, index);\n    });\n\n    t.priority = priority;\n\n    return t;\n  }\n}\n","/**\n * @barba/core/modules/transitions\n * <br><br>\n * ## Transitions manager.\n *\n * - Handle hooks and transition lifecycle\n *\n * @module core/modules/transitions\n * @preferred\n */\n\n/***/\n\n// Definitions\nimport {\n  HooksTransition,\n  HooksTransitionMap,\n  ITransitionData,\n  ITransitionFilters,\n  ITransitionOnce,\n  ITransitionPage,\n  Wrapper,\n} from '../defs';\n// Hooks\nimport { hooks } from '../hooks';\n// Utils\nimport { dom, helpers, runAsync } from '../utils';\n// Modules\nimport { BarbaError } from './Error';\nimport { Logger } from './Logger';\nimport { Store } from './Store';\n\nexport class Transitions {\n  public logger: Logger = new Logger('@barba/core');\n  public store: Store;\n  private _running: boolean = false;\n\n  constructor(transitions: ITransitionPage[] = []) {\n    this.store = new Store(transitions);\n  }\n\n  /**\n   * Get resolved transition\n   *\n   * - based on data\n   */\n  public get(\n    data: ITransitionData,\n    filters?: ITransitionFilters\n  ): ITransitionOnce | ITransitionPage {\n    return this.store.resolve(data, filters);\n  }\n\n  /**\n   * Animation running status.\n   */\n  get isRunning(): boolean {\n    return this._running;\n  }\n  set isRunning(status: boolean) {\n    this._running = status;\n  }\n\n  /**\n   * Check for registered once transition(s).\n   */\n  get hasOnce(): boolean {\n    return this.store.once.length > 0;\n  }\n\n  /**\n   * Check for registered self transition.\n   */\n  get hasSelf(): boolean {\n    return this.store.all.some(t => t.name === 'self');\n  }\n\n  /**\n   * ### Wait indicator.\n   *\n   * Tells Barba to get next page data<br>\n   * before starting the resolution<br>\n   * because some registered transitions need<br>\n   * next page data to be resolved (eg: `sync: true`, `to: { namespace }`, …)\n   */\n  get shouldWait(): boolean {\n    return this.store.all.some(t => (t.to && !t.to.route) || t.sync);\n  }\n\n  /**\n   * ### Do \"once\" transition.\n   *\n   * Hooks: see [[HooksOnce]].\n   */\n  public async doOnce({\n    data,\n    transition,\n  }: {\n    data: ITransitionData;\n    transition: ITransitionOnce;\n  }) {\n    const t = transition || {};\n    this._running = true;\n\n    try {\n      await this._doAsyncHook('beforeOnce', data, t);\n      await this.once(data, t);\n      await this._doAsyncHook('afterOnce', data, t);\n    } catch (error) {\n      this._running = false;\n\n      this.logger.debug('Transition error [before/after/once]');\n      this.logger.error(error);\n    }\n\n    this._running = false;\n  }\n\n  /**\n   * ### Do \"page\" transition.\n   *\n   * Hooks: see [[HooksPage]].\n   *\n   * `sync: false` (default) order:\n   *\n   * 1. before\n   * 2. beforeLeave\n   * 3. leave\n   * 4. afterLeave\n   * 5. beforeEnter\n   * 6. enter\n   * 7. afterEnter\n   * 8. after\n   *\n   * `sync: true` order:\n   *\n   * 1. before\n   * 2. beforeLeave\n   * 3. beforeEnter\n   * 4. leave & enter\n   * 5. afterLeave\n   * 6. afterEnter\n   * 7. after\n   */\n  public async doPage({\n    data,\n    transition,\n    page,\n    wrapper,\n  }: {\n    data: ITransitionData;\n    transition: ITransitionPage;\n    page: Promise<string | void>;\n    wrapper: Wrapper;\n  }) {\n    const t = transition || {};\n    const sync = t.sync === true || false;\n\n    this._running = true;\n\n    try {\n      // Check sync mode, wait for next content\n      if (sync) {\n        await helpers.update(page, data);\n      }\n\n      await this._doAsyncHook('before', data, t);\n\n      if (sync) {\n        try {\n          await this.add(data, wrapper);\n          // Before actions\n          await this._doAsyncHook('beforeLeave', data, t);\n          await this._doAsyncHook('beforeEnter', data, t);\n\n          // Actions\n          await Promise.all([this.leave(data, t), this.enter(data, t)]);\n\n          // After actions\n          await this._doAsyncHook('afterLeave', data, t);\n          await this._doAsyncHook('afterEnter', data, t);\n        } catch (error) {\n          // this.logger.debug('Transition error [sync]');\n          // this.logger.error(error);\n          if (this._isTransitionError(error)) {\n            throw new BarbaError(error, 'Transition error [sync]');\n          }\n        }\n      } else {\n        let leaveResult: any = false;\n\n        try {\n          // Leave\n          await this._doAsyncHook('beforeLeave', data, t);\n\n          leaveResult = await Promise.all([\n            this.leave(data, t),\n            helpers.update(page, data),\n          ]).then(values => values[0]);\n\n          await this._doAsyncHook('afterLeave', data, t);\n\n          // TODO: check here \"valid\" page result\n          // before going further\n        } catch (error) {\n          // this.logger.debug('Transition error [before/after/leave]');\n          // this.logger.error(error);\n          if (this._isTransitionError(error)) {\n            throw new BarbaError(\n              error,\n              'Transition error [before/after/leave]'\n            );\n          }\n        }\n\n        try {\n          // Enter\n          /* istanbul ignore else */\n          if (leaveResult !== false) {\n            await this.add(data, wrapper);\n\n            await this._doAsyncHook('beforeEnter', data, t);\n            await this.enter(data, t, leaveResult);\n            await this._doAsyncHook('afterEnter', data, t);\n          }\n        } catch (error) {\n          // this.logger.debug('Transition error [before/after/enter]');\n          // this.logger.error(error);\n          if (this._isTransitionError(error)) {\n            throw new BarbaError(\n              error,\n              'Transition error [before/after/enter]'\n            );\n          }\n        }\n      }\n\n      // Remove current contaienr\n      await this.remove(data);\n\n      await this._doAsyncHook('after', data, t);\n    } catch (error) {\n      this._running = false;\n\n      // If \"custom/specific\" barba error.\n      /* istanbul ignore else */\n      if (error.name && error.name === 'BarbaError') {\n        this.logger.debug(error.label);\n        this.logger.error(error.error);\n\n        throw error;\n      }\n\n      this.logger.debug('Transition error [page]');\n      this.logger.error(error);\n\n      throw error;\n    }\n\n    this._running = false;\n  }\n\n  /**\n   * Once hook + async \"once\" transition.\n   */\n  public async once(data: ITransitionData, t: ITransitionOnce): Promise<void> {\n    await hooks.do('once', data, t);\n\n    return t.once ? runAsync(t.once, t)(data) : Promise.resolve();\n  }\n\n  /**\n   * Leave hook + async \"leave\" transition.\n   */\n  public async leave(data: ITransitionData, t: ITransitionPage): Promise<any> {\n    await hooks.do('leave', data, t);\n\n    return t.leave ? runAsync(t.leave, t)(data) : Promise.resolve();\n  }\n\n  /**\n   * Enter hook + async \"enter\" transition.\n   */\n  public async enter(\n    data: ITransitionData,\n    t: ITransitionPage,\n    leaveResult?: any\n  ): Promise<void> {\n    await hooks.do('enter', data, t);\n\n    return t.enter\n      ? runAsync(t.enter, t)(data, leaveResult)\n      : Promise.resolve();\n  }\n\n  /**\n   * Add next container.\n   */\n  public async add(data: ITransitionData, wrapper: Wrapper): Promise<void> {\n    dom.addContainer(data.next.container, wrapper);\n    hooks.do('nextAdded', data);\n  }\n\n  /**\n   * Remove current container.\n   */\n  public async remove(data: ITransitionData): Promise<void> {\n    dom.removeContainer(data.current.container);\n    hooks.do('currentRemoved', data);\n  }\n\n  private _isTransitionError(error: any) {\n    if (error.message) {\n      // Errors from request\n      return !/Timeout error|Fetch error/.test(error.message);\n    }\n\n    if (error.status) {\n      // Errors from request\n      return false;\n    }\n\n    return true;\n  }\n\n  /**\n   * Do hooks + async transition methods.\n   */\n  private async _doAsyncHook(\n    hook: HooksTransition,\n    data: ITransitionData,\n    t: HooksTransitionMap\n  ): Promise<void> {\n    await hooks.do(hook, data, t);\n\n    return t[hook] ? runAsync(t[hook], t)(data) : Promise.resolve();\n  }\n}\n","/**\n * @barba/core/modules/views\n * <br><br>\n * ## Views manager.\n *\n * @module core/modules/views\n * @preferred\n */\n\n/***/\n\n// Definitions\nimport { HooksView, IView, IViewData } from '../defs';\n// Hooks\nimport { hooks } from '../hooks';\n// Utils\nimport { runAsync } from '../utils';\n// Types\ntype Hook = (data: IViewData) => Promise<void>;\n\nexport class Views {\n  /**\n   * Available hook names for views.\n   */\n  public names: HooksView[] = [\n    'beforeLeave',\n    'afterLeave',\n    'beforeEnter',\n    'afterEnter',\n  ];\n  /**\n   * Registered views by namespace.\n   */\n  public byNamespace: Map<string, IView> = new Map();\n\n  /**\n   * Init views.\n   */\n  constructor(views: IView[]) {\n    if (views.length === 0) {\n      return;\n    }\n\n    // TODO: add check\n    // for valid views? criteria? (namespace property, string ?)\n    // or duplicate\n    views.forEach(view => {\n      this.byNamespace.set(view.namespace, view);\n    });\n\n    this.names.forEach(name => {\n      hooks[name](this._createHook(name));\n    });\n  }\n\n  /**\n   * Create the hook method.\n   *\n   * - get view based on namespace\n   * - execute callback with transition data\n   */\n  private _createHook(name: HooksView): Hook {\n    return data => {\n      const { namespace } = name.match(/enter/i) ? data.next : data.current;\n      const view = this.byNamespace.get(namespace);\n\n      // TODO: manage self…\n      // if (view && data.trigger !== 'self') {\n      if (view && view[name]) {\n        return runAsync(view[name], view)(data);\n      }\n\n      return Promise.resolve();\n    };\n  }\n}\n","// Element.prototype.matches polyfill\n// https://developer.mozilla.org/en-US/docs/Web/API/Element/matches#Polyfill\nif (!Element.prototype.matches) {\n  Element.prototype.matches =\n    (Element as any).prototype.msMatchesSelector ||\n    Element.prototype.webkitMatchesSelector;\n}\n\n// Element.prototype.closest polyfill\n// https://developer.mozilla.org/en-US/docs/Web/API/Element/closest#Polyfill\nif (!Element.prototype.closest) {\n  Element.prototype.closest = function closest(s: string) {\n    let el = this;\n\n    do {\n      if (el.matches(s)) {\n        return el;\n      }\n\n      el = (el.parentElement || el.parentNode) as Element;\n    } while (el !== null && el.nodeType === 1);\n\n    return null;\n  };\n}\n","/**\n * @module core/schemas\n */\n\n// Definitions\nimport { ISchemaPage } from '../defs';\n\n/**\n * See [[ISchemaPage]]\n */\nexport const schemaPage: ISchemaPage = {\n  container: null,\n  html: '',\n  namespace: '',\n  url: {\n    hash: '',\n    href: '',\n    path: '',\n    port: null,\n    query: {},\n  },\n};\n","/**\n * @barba/core\n * <br><br>\n * ## Barba core object\n *\n * Main methods:\n *\n * - `.init()` for initialization with options\n * - `.use()` for plugins\n *\n * @module core\n */\n\n/***/\n\nimport { version } from '../package.json';\n// Definitions\nimport {\n  IBarbaOptions,\n  IBarbaPlugin,\n  IgnoreOption,\n  ISchemaPage,\n  ITransitionData,\n  ITransitionOnce,\n  ITransitionPage,\n  Link,\n  LinkEvent,\n  RequestCustomError,\n  RequestErrorOrResponse,\n  SchemaAttributeValues,\n  Trigger,\n  Wrapper,\n} from './defs';\n// Hooks\nimport { hooks } from './hooks';\n// Modules\nimport { Cache } from './modules/Cache';\nimport { Logger } from './modules/Logger';\nimport { Prevent } from './modules/Prevent';\nimport { Transitions } from './modules/Transitions';\nimport { Views } from './modules/Views';\n// Polyfills\nimport './polyfills';\n// Schemas\nimport { schemaAttribute } from './schemas/attribute';\nimport { schemaPage } from './schemas/page';\n// Utils\nimport { dom, helpers, history, request, url } from './utils';\n\nexport class Core {\n  /**\n   * Version.\n   */\n  public version: string = version;\n  /**\n   * Schemas.\n   */\n  public schemaPage: ISchemaPage = schemaPage;\n  /**\n   * Logger class, allows plugins to create Logger.\n   */\n  public Logger: typeof Logger = Logger;\n  /**\n   * Barba logger.\n   */\n  public logger: Logger = new Logger('@barba/core');\n  /**\n   * Plugins.\n   */\n  public plugins: Array<IBarbaPlugin<any>> = [];\n  /**\n   * Options\n   */\n  public timeout: number;\n  public cacheIgnore: IgnoreOption;\n  public prefetchIgnore: IgnoreOption;\n  public preventRunning: boolean;\n  /**\n   * Hooks\n   */\n  public hooks = hooks;\n  /**\n   * Modules.\n   */\n  // public history: History;\n  public cache: Cache;\n  public prevent: Prevent;\n  public transitions: Transitions;\n  public views: Views;\n  /**\n   * Utils.\n   */\n  public dom = dom;\n  public helpers = helpers;\n  public history = history;\n  public request = request;\n  public url = url;\n\n  private _data: ITransitionData;\n  private _requestCustomError: RequestCustomError;\n  private _wrapper: Wrapper;\n\n  /**\n   * ### Init plugin with options.\n   *\n   * See [[IBarbaPlugin]] for more details.\n   */\n  public use<T>(plugin: IBarbaPlugin<T>, options?: T): void {\n    const installedPlugins = this.plugins;\n\n    // Plugin installation\n    if (installedPlugins.indexOf(plugin) > -1) {\n      this.logger.warn(`Plugin [${plugin.name}] already installed.`);\n\n      return;\n    }\n\n    if (typeof plugin.install !== 'function') {\n      this.logger.warn(`Plugin [${plugin.name}] has no \"install\" method.`);\n\n      return;\n    }\n\n    plugin.install(this, options);\n    installedPlugins.push(plugin);\n  }\n\n  /**\n   * ### Init barba with options.\n   *\n   * See [[IBarbaOptions]] for more details.\n   *\n   * Default values are:\n   *\n   * - transitions: `[]`\n   * - views: `[]`\n   * - schema: [[SchemaAttribute]]\n   * - timeout: `2e3`\n   * - cacheIgnore: `false`\n   * - prefetchIgnore: `false`\n   * - preventRunning: `false`\n   * - prevent: `null`,\n   * - debug: `false`\n   * - logLevel: `'debug'`\n   */\n  public init(\n    /** @ignore */ {\n      transitions = [],\n      views = [],\n      schema = schemaAttribute,\n      requestError,\n      timeout = 2e3,\n      cacheIgnore = false,\n      prefetchIgnore = false,\n      /* istanbul ignore next */\n      preventRunning = false,\n      prevent: preventCustom = null,\n      debug = false,\n      logLevel = 'off',\n    }: IBarbaOptions = {}\n  ) {\n    // 0. Set logger level and print version\n    Logger.setLevel(debug === true ? 'debug' : logLevel);\n    this.logger.info(this.version);\n\n    // 1. Manage options\n    Object.keys(schema).forEach(k => {\n      const attr = k as SchemaAttributeValues;\n\n      /* istanbul ignore else */\n      if (schemaAttribute[attr]) {\n        schemaAttribute[attr] = schema[attr];\n      }\n    });\n    this._requestCustomError = requestError;\n    this.timeout = timeout;\n    this.cacheIgnore = cacheIgnore;\n    this.prefetchIgnore = prefetchIgnore;\n    this.preventRunning = preventRunning;\n\n    // 2. Get and check wrapper\n    this._wrapper = this.dom.getWrapper();\n    if (!this._wrapper) {\n      throw new Error('[@barba/core] No Barba wrapper found');\n    }\n    this._wrapper.setAttribute('aria-live', 'polite'); // A11y\n\n    // 3. Init pages (get \"current\" data)\n    this._resetData();\n\n    const { current } = this.data;\n\n    if (!current.container) {\n      throw new Error('[@barba/core] No Barba container found');\n    }\n\n    // 4. Init other modules\n    this.cache = new Cache(cacheIgnore);\n    this.prevent = new Prevent(prefetchIgnore);\n    this.transitions = new Transitions(transitions);\n    this.views = new Views(views);\n\n    // Add prevent custom\n    if (preventCustom !== null) {\n      if (typeof preventCustom !== 'function') {\n        throw new Error('[@barba/core] Prevent should be a function');\n      }\n\n      this.prevent.add('preventCustom', preventCustom);\n    }\n\n    // 5. Use \"current\" data\n    // Init history\n    this.history.init(current.url.href, current.namespace);\n    // Add to cache\n    // TODO: do not cache renderer HTML, only request results…\n    // this.cache.set(current.url.href, Promise.resolve(current.html), 'init');\n\n    // 6. Bind context\n    this._onLinkEnter = this._onLinkEnter.bind(this);\n    this._onLinkClick = this._onLinkClick.bind(this);\n    this._onStateChange = this._onStateChange.bind(this);\n    this._bind();\n\n    // 7. Init plugins\n    this.plugins.forEach(plugin => plugin.init());\n\n    // 8. Barba ready\n    // Set next + trigger for once and `beforeEnter`/`afterEnter` view on page load.\n    const onceData = this.data;\n\n    onceData.trigger = 'barba';\n    onceData.next = onceData.current;\n    onceData.current = { ...this.schemaPage };\n    this.hooks.do('ready', onceData);\n\n    // 9. Finally, do once…\n    this.once(onceData);\n\n    // Clean data for first barba transition…\n    this._resetData();\n  }\n\n  public destroy(): void {\n    this._resetData();\n    this._unbind();\n    this.history.clear();\n    this.hooks.clear();\n    this.plugins = [];\n  }\n\n  get data(): ITransitionData {\n    return this._data;\n  }\n\n  get wrapper(): HTMLElement {\n    return this._wrapper;\n  }\n\n  /**\n   * ### Force a page change without Barba transition.\n   */\n  public force(href: string): void {\n    // DEV\n    // Can be used waiting animation cancellation management…\n    window.location.assign(href);\n  }\n\n  /**\n   * ### Go for a Barba transition.\n   *\n   * Manage \"self page\" href:\n   *\n   * - if same url and no self transition, keep default behavior\n   *   - link: reload the page\n   *   - anchor: scroll to\n   * - if same url with self transition, use it\n   * - then start a page transition.\n   */\n  public go(\n    href: string,\n    trigger: Trigger = 'barba',\n    e?: LinkEvent | PopStateEvent\n  ): Promise<void> {\n    // If animation running, force reload\n    if (this.transitions.isRunning) {\n      this.force(href);\n\n      return;\n    }\n\n    let self = false;\n\n    // Check prevent sameURL against current history\n    // + state check\n    // + update trigger with direction\n    if (trigger === 'popstate') {\n      self =\n        this.history.current &&\n        this.url.getPath(this.history.current.url) === this.url.getPath(href);\n    } else {\n      self = this.prevent.run('sameUrl', null, null, href);\n    }\n\n    if (self && !this.transitions.hasSelf) {\n      return;\n    }\n\n    trigger = this.history.change(href, trigger, e);\n\n    if (e) {\n      e.stopPropagation();\n      e.preventDefault();\n    }\n\n    return this.page(href, trigger, self);\n  }\n\n  /**\n   * ### Start an \"once\" transition.\n   *\n   * If some registered \"once\" transition,\n   * get the \"resolved\" transition from the store and start it.\n   */\n  public async once(readyData: ITransitionData): Promise<void> {\n    await this.hooks.do('beforeEnter', readyData);\n\n    // Check if once transition\n    if (this.transitions.hasOnce) {\n      const transition = this.transitions.get(readyData, {\n        once: true,\n      }) as ITransitionOnce;\n\n      await this.transitions.doOnce({ transition, data: readyData });\n    }\n\n    await this.hooks.do('afterEnter', readyData);\n  }\n\n  /**\n   * ### Start a \"page\" transition.\n   *\n   * 1. If no running transition, updates data with full URL properties and trigger.\n   * 2. Get page from cache or init request.\n   * 3. Wait if some transitions need \"next\" data (`sync: true`, `to: …`).\n   * 4. Manage the history, depending on trigger.\n   * 5. Get \"data\" and trigger \"go\" hook.\n   * 6. Get the \"resolved\" transition from the store and start it.\n   * 7. Update title and reset data (current, next = undefined).\n   *\n   * > If \"self\", use the \"self\" transition\n   */\n  public async page(\n    href: string,\n    trigger: Trigger,\n    self: boolean\n  ): Promise<void> {\n    this.data.next.url = {\n      href,\n      ...this.url.parse(href),\n    };\n    this.data.trigger = trigger;\n\n    const page = this.cache.has(href)\n      ? this.cache.update(href, { action: 'click' }).request\n      : this.cache.set(\n          href,\n          this.request(\n            href,\n            this.timeout,\n            this.onRequestError.bind(this, trigger)\n          ),\n          'click'\n        ).request;\n\n    // Need to wait before getting the right transition\n    if (this.transitions.shouldWait) {\n      await helpers.update(page, this.data);\n    }\n\n    const data = this.data;\n\n    // Hook: between trigger and transition\n    // Can be used to resolve \"route\"…\n    await this.hooks.do('page', data);\n\n    try {\n      const transition = this.transitions.get(data, {\n        once: false,\n        self,\n      }) as ITransitionPage;\n\n      await this.transitions.doPage({\n        data,\n        page,\n        transition,\n        wrapper: this._wrapper,\n      });\n\n      this._resetData();\n    } catch (error) {\n      // Something went wrong (rejected promise, error, 404, 505, other…)\n      // TODO: manage / use cases for cancellation\n      // this.logger.debug('Transition cancelled');\n\n      // If transition error and no debug mode, force reload page.\n      /* istanbul ignore else */\n      if (Logger.getLevel() === 0) {\n        this.force(data.current.url.href);\n      }\n    }\n  }\n\n  /**\n   * When a request error occurs.\n   *\n   * Allow the user to manage request error. (E.g: 404)\n   */\n  public onRequestError(trigger: Trigger, ...args: any): boolean {\n    // Cancel transition status\n    this.transitions.isRunning = false;\n\n    const [href, response]: [string, RequestErrorOrResponse] = args;\n    const action = this.cache.getAction(href);\n    this.cache.delete(href);\n\n    // Custom requestError returning false will return here.\n    if (\n      this._requestCustomError &&\n      this._requestCustomError(trigger, action, href, response) === false\n    ) {\n      return false;\n    }\n\n    // Force page change\n    if (action === 'click') {\n      this.force(href);\n    }\n    return false;\n  }\n\n  /**\n   * Programmatically prefetch\n   */\n  public prefetch(href: string) {\n    // Already in cache\n    /* istanbul ignore next */\n    if (this.cache.has(href)) {\n      return;\n    }\n\n    this.cache.set(\n      href,\n      this.request(\n        href,\n        this.timeout,\n        this.onRequestError.bind(this, 'barba')\n      ).catch((error: RequestErrorOrResponse) => {\n        this.logger.error(error);\n      }),\n      'prefetch'\n    );\n  }\n\n  /**\n   * Bind event listeners.\n   */\n  private _bind(): void {\n    /* istanbul ignore else */\n    if (this.prefetchIgnore !== true) {\n      document.addEventListener('mouseover', this._onLinkEnter);\n      document.addEventListener('touchstart', this._onLinkEnter);\n    }\n    document.addEventListener('click', this._onLinkClick);\n    window.addEventListener('popstate', this._onStateChange);\n  }\n\n  /**\n   * Bind event listeners.\n   */\n  private _unbind(): void {\n    /* istanbul ignore else */\n    if (this.prefetchIgnore !== true) {\n      document.removeEventListener('mouseover', this._onLinkEnter);\n      document.removeEventListener('touchstart', this._onLinkEnter);\n    }\n    document.removeEventListener('click', this._onLinkClick);\n    window.removeEventListener('popstate', this._onStateChange);\n  }\n\n  /**\n   * When a element is entered.\n   *\n   * Get valid link element.\n   * Cache URL if needed.\n   */\n  private _onLinkEnter(e: LinkEvent): void {\n    const link = this._getLinkElement(e);\n\n    if (!link) {\n      return;\n    }\n\n    const href = this.dom.getHref(link);\n\n    if (this.prevent.checkHref(href)) {\n      return;\n    }\n\n    // Already in cache\n    if (this.cache.has(href)) {\n      return;\n    }\n\n    this.cache.set(\n      href,\n      this.request(\n        href,\n        this.timeout,\n        this.onRequestError.bind(this, link)\n      ).catch((error: RequestErrorOrResponse) => {\n        this.logger.error(error);\n      }),\n      'enter'\n    );\n  }\n\n  /**\n   * When an element is clicked.\n   *\n   * Get valid link element.\n   * Prevent same URL.\n   * Go for a Barba transition.\n   */\n  private _onLinkClick(e: LinkEvent): void {\n    // This use `prevent.checkLink` under the hood to get eligible link.\n    const link = this._getLinkElement(e);\n\n    if (!link) {\n      return;\n    }\n\n    if (this.transitions.isRunning && this.preventRunning) {\n      e.preventDefault();\n      e.stopPropagation();\n\n      return;\n    }\n\n    this.go(this.dom.getHref(link), link, e);\n  }\n\n  /**\n   * When History state changes.\n   *\n   * Get \"href\" from URL\n   * Go for a Barba transition.\n   */\n  private _onStateChange(e: PopStateEvent): void {\n    this.go(this.url.getHref(), 'popstate', e);\n  }\n\n  /**\n   * Get a valid link ancestor.\n   *\n   * Check for a \"href\" attribute.\n   * Then check if eligible for Barba.\n   */\n  private _getLinkElement(e: LinkEvent): Link {\n    let el = e.target as Link;\n\n    while (el && !this.dom.getHref(el)) {\n      el = (el as HTMLElement).parentNode as Link;\n    }\n\n    // Check prevent\n    if (!el || this.prevent.checkLink(el, e, this.dom.getHref(el))) {\n      return;\n    }\n\n    return el;\n  }\n\n  /**\n   * Reset pages data.\n   *\n   * Set \"current\" and unset \"next\".\n   */\n  private _resetData() {\n    const href = this.url.getHref();\n    const current = {\n      container: this.dom.getContainer(),\n      html: this.dom.getHtml(),\n      namespace: this.dom.getNamespace(),\n      url: {\n        href,\n        ...this.url.parse(href),\n      },\n    };\n\n    this._data = {\n      current,\n      next: { ...this.schemaPage },\n      trigger: undefined,\n    };\n\n    this.hooks.do('reset', this.data);\n  }\n}\n\nconst core = new Core();\n\nexport default core;\n","/**\n * @barba/css\n * <br><br>\n * ## Barba CSS.\n *\n * - Add CSS classes\n * - Manage CSS transitions\n *\n * @module css\n * @preferred\n */\n\n/***/\n\n// Definitions\nimport {\n  IBarbaPlugin,\n  ITransitionData,\n  ITransitionPage,\n} from '@barba/core/src/defs';\n\nimport { Core } from '@barba/core/src/core';\nimport { Logger } from '@barba/core/src/modules/Logger';\n\nimport { ICssCallbacks } from './defs';\n\nimport { version } from '../package.json';\n\nexport class Css implements IBarbaPlugin<{}> {\n  public name = '@barba/css';\n  public version = version;\n  public barba: Core;\n  public logger: Logger;\n\n  public prefix: string = 'barba';\n  public callbacks: ICssCallbacks = {};\n  public cb: any;\n\n  // Check if transition property applied\n  private _hasTransition: boolean = false;\n\n  /**\n   * Plugin installation.\n   */\n  public install(barba: Core) {\n    this.logger = new barba.Logger(this.name);\n    this.logger.info(this.version);\n    this.barba = barba;\n    this._once = this._once.bind(this);\n    this._leave = this._leave.bind(this);\n    this._enter = this._enter.bind(this);\n  }\n\n  /**\n   * Plugin installation.\n   */\n  public init() {\n    // Register hooks to get prefix\n    this.barba.hooks.before(this._getPrefix, this);\n    this.barba.hooks.beforeOnce(this._getPrefix, this);\n\n    // Register hook for CSS classes\n    this.barba.hooks.beforeOnce(this._beforeOnce, this);\n    this.barba.hooks.afterOnce(this._afterOnce, this);\n    this.barba.hooks.beforeLeave(this._beforeLeave, this);\n    this.barba.hooks.afterLeave(this._afterLeave, this);\n    this.barba.hooks.beforeEnter(this._beforeEnter, this);\n    this.barba.hooks.afterEnter(this._afterEnter, this);\n\n    // Override main transitions\n    this.barba.transitions.once = this._once;\n    this.barba.transitions.leave = this._leave;\n    this.barba.transitions.enter = this._enter;\n\n    // Add empty default transition (force prepend)\n    /* istanbul ignore next */\n    this.barba.transitions.store.all.unshift({\n      name: 'barba',\n      once() {}, // tslint:disable-line:no-empty\n      leave() {}, // tslint:disable-line:no-empty\n      enter() {}, // tslint:disable-line:no-empty\n    });\n    this.barba.transitions.store.update();\n  }\n\n  /**\n   * Initial state.\n   */\n  public async start(container: HTMLElement, kind: string): Promise<void> {\n    // Set initial CSS values\n    this.add(container, kind); // CSS: add kind\n    await this.barba.helpers.nextTick();\n    // Apply CSS transition\n    this.add(container, `${kind}-active`); // CSS: add kind-active\n    await this.barba.helpers.nextTick();\n  }\n\n  /**\n   * Next frame state.\n   */\n  public async next(container: HTMLElement, kind: string): Promise<any> {\n    this._hasTransition = this._checkTransition(container);\n\n    if (this._hasTransition) {\n      // We need to listen the end of the animation\n      return new Promise(async resolve => {\n        this.cb = resolve;\n        this.callbacks[kind] = resolve;\n\n        container.addEventListener('transitionend', resolve, false);\n        await this.barba.helpers.nextTick();\n        this.remove(container, kind); // CSS: remove kind\n        // await this.barba.helpers.nextTick();\n        this.add(container, `${kind}-to`); // CSS: add kind-to\n        await this.barba.helpers.nextTick();\n      });\n    } else {\n      this.remove(container, kind); // CSS: remove kind\n      await this.barba.helpers.nextTick();\n      this.add(container, `${kind}-to`); // CSS: add kind-to\n      await this.barba.helpers.nextTick();\n    }\n  }\n\n  /**\n   * Final state.\n   */\n  public async end(container: HTMLElement, kind: string): Promise<void> {\n    this.remove(container, `${kind}-to`); // CSS: remove kind-to\n    this.remove(container, `${kind}-active`); // CSS: remove kind-active\n    container.removeEventListener('transitionend', this.callbacks[kind]);\n    this._hasTransition = false;\n  }\n\n  /**\n   * Add CSS classes.\n   */\n  public add(el: HTMLElement, step: string): void {\n    el.classList.add(`${this.prefix}-${step}`);\n  }\n\n  /**\n   * Remove CSS classes.\n   */\n  public remove(el: HTMLElement, step: string): void {\n    el.classList.remove(`${this.prefix}-${step}`);\n  }\n\n  /**\n   * Get CSS prefix from transition `name` property.\n   */\n  private _getPrefix(data: ITransitionData, t: ITransitionPage): void {\n    this.prefix = t.name || 'barba';\n  }\n\n  /**\n   * Check if CSS transition is applied\n   */\n  private _checkTransition(container: HTMLElement) {\n    // DEV: check for CSS animation property?\n    return getComputedStyle(container).transitionDuration !== '0s';\n  }\n\n  /**\n   * `beforeOnce` hook.\n   */\n  private _beforeOnce(data: ITransitionData): Promise<void> {\n    return this.start(data.next.container, 'once');\n  }\n\n  /**\n   * `once` hook.\n   */\n  private async _once(data: ITransitionData, t: ITransitionPage): Promise<any> {\n    await this.barba.hooks.do('once', data, t);\n\n    return this.next(data.next.container, 'once');\n  }\n\n  /**\n   * `afterOnce` hook.\n   */\n  private _afterOnce(data: ITransitionData): Promise<void> {\n    return this.end(data.next.container, 'once');\n  }\n\n  /**\n   * `beforeLeave` hook.\n   */\n  private _beforeLeave(data: ITransitionData): Promise<void> {\n    return this.start(data.current.container, 'leave');\n  }\n\n  /**\n   * `leave` hook.\n   */\n  private async _leave(\n    data: ITransitionData,\n    t: ITransitionPage\n  ): Promise<void> {\n    await this.barba.hooks.do('leave', data, t);\n\n    return this.next(data.current.container, 'leave');\n  }\n\n  /**\n   * `afterLeave` hook.\n   */\n  private _afterLeave(data: ITransitionData): Promise<void> {\n    this.end(data.current.container, 'leave');\n    // For CSS transitions, we need to remove current container\n    // directly after the leave transition\n    this.barba.transitions.remove(data);\n\n    return Promise.resolve();\n  }\n\n  /**\n   * `beforeEnter` hook.\n   */\n  private _beforeEnter(data: ITransitionData): Promise<void> {\n    // Avoid on first load\n    if (this.barba.history.size === 1) {\n      return Promise.resolve();\n    }\n    return this.start(data.next.container, 'enter');\n  }\n\n  /**\n   * `enter` hook.\n   */\n  private async _enter(\n    data: ITransitionData,\n    t: ITransitionPage\n  ): Promise<void> {\n    await this.barba.hooks.do('enter', data, t);\n\n    return this.next(data.next.container, 'enter');\n  }\n\n  /**\n   * `afterEnter` hook.\n   */\n  private _afterEnter(data: ITransitionData): Promise<void> {\n    // Avoid on first load\n    if (this.barba.history.size === 1) {\n      return Promise.resolve();\n    }\n    return this.end(data.next.container, 'enter');\n  }\n}\n\nconst css = new Css();\n\nexport default css;\n","import barba from '@barba/core';\nimport barbaCss from '@barba/css';\n\nbarba.use(barbaCss);\n\nbarba.init({\n    \n});"],"names":["$8731ed2e7b1e8304$exports","t","n","r","length","e","enumerable","configurable","writable","Object","defineProperty","key","prototype","assign","arguments","hasOwnProperty","call","apply","this","create","constructor","__proto__","i","setPrototypeOf","getPrototypeOf","o","u","Reflect","construct","sham","Proxy","Date","toString","push","Function","bind","f","Map","indexOf","TypeError","has","get","set","value","_catch","body","recover","result","then","Symbol","iterator","asyncIterator","LogLevels","HookMethods","_level","off","Logger","source","_source","getLevel","setLevel","name","error","objects","_log","console","warn","warning","info","debug","log","fn","level","concat","pathToRegexp","regexpToFunction","parse","tokensToFunction","tokensToRegExp","DEFAULT_DELIMITER","PATH_REGEXP","RegExp","join","str","options","res","tokens","index","path","defaultDelimiter","delimiter","whitelist","pathEscaped","exec","m","escaped","offset","slice","prev","capture","group","modifier","k","c","pattern","prefix","optional","repeat","escapeGroup","escapeString","substr","re","keys","pathname","params","decode","decodeURIComponent","split","map","matches","Array","flags","data","encode","encodeURIComponent","validate","token","segment","isArray","j","test","String","replace","sensitive","strict","start","end","endsWith","route","endToken","isEndDelimited","groups","match","parts","schemaAttribute","container","history","namespace","prevent","wrapper","dom","DOMParser","el","outerHTML","toDocument","htmlString","_parser","parseFromString","toElement","div","document","createElement","innerHTML","getHtml","doc","documentElement","getWrapper","scope","querySelector","_attr","getContainer","removeContainer","contains","parentNode","removeChild","addContainer","existingContainer","_insertAfter","appendChild","getNamespace","ns","getAttribute","getHref","tagName","toLowerCase","href","resolveUrl","baseVal","urls","numUrls","Error","base","head","getElementsByTagName","insertBefore","firstChild","resolved","a","newNode","referenceNode","nextSibling","init","url","_session","state","scroll","x","window","scrollX","y","scrollY","_states","_pointer","item","from","states","replaceState","change","trigger","_getDirection","add","size","action","_getAction","pushState","update","remove","splice","pop","clear","newStates","attr","hasAttribute","diff","Math","abs","page","next","html","nextDocument","title","t1","Promise","reject","ptr","resolve","requestAnimationFrame","getOrigin","location","origin","getPort","port","portString","substring","parseInt","hash","query","hashIndex","queryIndex","parseQuery","reduce","acc","clean","H","request","ttl","requestError","xhr","XMLHttpRequest","onreadystatechange","readyState","DONE","status","responseText","statusText","ontimeout","err","onerror","open","timeout","setRequestHeader","send","C","obj","runAsync","func","ctx","args","async","promise","answer","isPromise","hooks","_this","registered","all","forEach","hook","_this2","Set","chain","_this3","logger","_this4","help","Ignore","ignore","_ignoreAll","paths","_ignoreRegexes","p","checkHref","some","regex","Cache","_state","getRequest","getAction","exists","newTab","event","which","metaKey","ctrlKey","shiftKey","altKey","blank","target","corsDomain","protocol","hostname","corsPort","download","preventSelf","preventAll","Boolean","closest","sameUrl","Prevent","check","suite","tests","run","checkLink","BarbaError","label","captureStackTrace","Store","transitions","type","_rules","position","filters","once","filter","self","matching","active","find","valid","reverse","rule","_check","to","activeMatch","transitionType","s","infos","_addPriority","sort","b","priority","leave","enter","transition","direction","isValid","hasMatch","strRule","objRule","fnName","current","names","_calculatePriority","ruleName","ruleIndex","pow","Transitions","store","doOnce","_running","_doAsyncHook","doPage","sync","h","_isTransitionError","leaveResult","helpers","values","message","Views","views","view","byNamespace","_createHook","Element","msMatchesSelector","webkitMatchesSelector","parentElement","nodeType","schemaPage","version","use","plugin","installedPlugins","plugins","install","schema","v","cacheIgnore","prefetchIgnore","preventRunning","preventCustom","g","logLevel","E","_requestCustomError","_wrapper","setAttribute","_resetData","cache","_onLinkEnter","_onLinkClick","_onStateChange","_bind","onceData","destroy","_unbind","force","go","isRunning","getPath","hasSelf","stopPropagation","preventDefault","readyData","hasOnce","onRequestError","shouldWait","response","prefetch","catch","_this5","addEventListener","removeEventListener","link","_getLinkElement","_this6","_data","$9953c493e62ac538$exports","barba","_once","_leave","_enter","before","_getPrefix","beforeOnce","_beforeOnce","afterOnce","_afterOnce","beforeLeave","_beforeLeave","afterLeave","_afterLeave","beforeEnter","_beforeEnter","afterEnter","_afterEnter","unshift","kind","nextTick","_hasTransition","_checkTransition","cb","callbacks","step","classList","getComputedStyle","transitionDuration","_this8","_this10","_this12","$parcel$interopDefault"],"version":3,"file":"index.0429a3ac.js.map"}